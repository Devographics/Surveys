{
  "dataAPI": {
    "surveys": {
      "state_of_css": {
        "css2024": {
          "colors": {
            "colors_features": [
              {
                "id": "color_function",
                "entity": {
                  "name": "`color()`",
                  "nameClean": "color()",
                  "nameHtml": "<code>color()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-color-function",
                    "url": "https://caniuse.com/css-color-function"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color",
                    "title": "color()",
                    "summary": "The color() functional notation allows a color to be specified in a particular, specified color space rather than the implicit sRGB color space that most of the other color functions operate in."
                  },
                  "example": {
                    "language": "css",
                    "code": ".brightest-green {\n  background: color(display-p3 0 1 0);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.brightest-green</span> {\n  <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">color</span>(display-p3 <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">0</span>);\n}"
                  }
                }
              },
              {
                "id": "accent_color",
                "entity": {
                  "name": "`accent-color`",
                  "nameClean": "accent-color",
                  "nameHtml": "<code>accent-color</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_properties_accent-color",
                    "url": "https://caniuse.com/mdn-css_properties_accent-color"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/accent-color",
                    "title": "accent-color",
                    "summary": "The accent-color CSS property sets the accent color for user-interface controls generated by some elements."
                  },
                  "example": {
                    "language": "css",
                    "code": "input[type='checkbox'] {\n  accent-color: tomato;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-attr\">[type=<span class=\"hljs-string\">&#x27;checkbox&#x27;</span>]</span> {\n  accent-<span class=\"hljs-attribute\">color</span>: tomato;\n}"
                  }
                }
              },
              {
                "id": "color_mix",
                "entity": {
                  "name": "`color-mix()`",
                  "nameClean": "color-mix()",
                  "nameHtml": "<code>color-mix()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_types_color_color-mix",
                    "url": "https://caniuse.com/mdn-css_types_color_color-mix"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color-mix",
                    "title": "color-mix()",
                    "summary": "The color-mix() functional notation takes two <color> values and returns the result of mixing them in a given colorspace by a given amount."
                  },
                  "example": {
                    "language": "css",
                    "code": ".teal {\n  background: color-mix(in lab, white 20%, #34c9eb);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.teal</span> {\n  <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">color-mix</span>(in lab, white <span class=\"hljs-number\">20%</span>, <span class=\"hljs-number\">#34c9eb</span>);\n}"
                  }
                }
              },
              {
                "id": "wide_gamut_colors",
                "entity": {
                  "name": "Wide Gamut Colors",
                  "nameClean": "Wide Gamut Colors",
                  "entityType": "feature",
                  "description": "`lch()`, `lab()`, `oklch()`, `oklab()`\n",
                  "descriptionClean": "lch(), lab(), oklch(), oklab()",
                  "descriptionHtml": "<code>lch()</code>, <code>lab()</code>, <code>oklch()</code>, <code>oklab()</code>\n",
                  "caniuse": {
                    "name": "css-lch-lab",
                    "url": "https://caniuse.com/css-lch-lab"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/lch",
                    "title": "lch()",
                    "summary": "The lch() functional notation expresses a given color using the LCH color space, which represents lightness, chroma, and hue. It uses the same L axis as the lab() color function of the CIELab color space, but it uses the polar coordinates C (Chroma) and H (Hue)."
                  },
                  "example": {
                    "language": "css",
                    "code": ".foo {\n  background-color: lab(29.2345% 39.3825 20.0664);\n  background-color: lch(29.2345% 44.2 27);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.foo</span> {\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">lab</span>(<span class=\"hljs-number\">29.2345%</span> <span class=\"hljs-number\">39.3825</span> <span class=\"hljs-number\">20.0664</span>);\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">lch</span>(<span class=\"hljs-number\">29.2345%</span> <span class=\"hljs-number\">44.2</span> <span class=\"hljs-number\">27</span>);\n}"
                  }
                }
              },
              {
                "id": "relative_colors",
                "entity": {
                  "name": "Relative Colors",
                  "nameClean": "Relative Colors",
                  "entityType": "feature",
                  "example": {
                    "language": "css",
                    "code": ".foo {\n  --color: #4488dd;\n  background-color: hsl(from var(--color) h s calc(l * 1.2))\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.foo</span> {\n  <span class=\"hljs-attr\">--color</span>: <span class=\"hljs-number\">#4488dd</span>;\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">hsl</span>(from <span class=\"hljs-built_in\">var</span>(--color) h s <span class=\"hljs-built_in\">calc</span>(l * <span class=\"hljs-number\">1.2</span>))\n}"
                  }
                }
              },
              {
                "id": "gradient_color_spaces",
                "entity": {
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_types_image_gradient_conic-gradient_interpolation_color_space",
                    "url": "https://caniuse.com/mdn-css_types_image_gradient_conic-gradient_interpolation_color_space"
                  },
                  "example": {
                    "language": "css",
                    "code": ".gradient {\n  background: linear-gradient(in oklab, hsl(80 90% 50%), red);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.gradient</span> {\n  <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">linear-gradient</span>(in oklab, <span class=\"hljs-built_in\">hsl</span>(<span class=\"hljs-number\">80</span> <span class=\"hljs-number\">90%</span> <span class=\"hljs-number\">50%</span>), red);\n}"
                  }
                }
              }
            ]
          }
        }
      }
    }
  }
}