{
  "dataAPI": {
    "surveys": {
      "state_of_css": {
        "css2024": {
          "typography": {
            "typography_features": [
              {
                "id": "font_display",
                "entity": {
                  "name": "`font-display`",
                  "nameClean": "font-display",
                  "nameHtml": "<code>font-display</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-font-rendering-controls",
                    "url": "https://caniuse.com/css-font-rendering-controls"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display",
                    "title": "font-display",
                    "summary": "The font-display descriptor for the @font-face at-rule determines how a font face is displayed based on whether and when it is downloaded and ready to use."
                  },
                  "example": {
                    "language": "css",
                    "code": "@font-face {\n  font-family: ExampleFont;\n  src: url(/path/to/fonts/examplefont.woff) format(\"woff\");\n  font-display: fallback;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@font-face</span> {\n  <span class=\"hljs-attribute\">font-family</span>: ExampleFont;\n  <span class=\"hljs-attribute\">src</span>: <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">/path/to/fonts/examplefont.woff</span>) <span class=\"hljs-built_in\">format</span>(<span class=\"hljs-string\">&quot;woff&quot;</span>);\n  <span class=\"hljs-attribute\">font-display</span>: fallback;\n}"
                  }
                }
              },
              {
                "id": "line_clamp",
                "entity": {
                  "name": "`line-clamp`",
                  "nameClean": "line-clamp",
                  "nameHtml": "<code>line-clamp</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-line-clamp",
                    "url": "https://caniuse.com/css-line-clamp"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-line-clamp",
                    "title": "-webkit-line-clamp",
                    "summary": "The -webkit-line-clamp CSS property allows limiting of the contents of a block to the specified number of lines."
                  },
                  "example": {
                    "language": "css",
                    "code": "p {\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">p</span> {\n  <span class=\"hljs-attribute\">display</span>: -webkit-box;\n  -webkit-line-clamp: <span class=\"hljs-number\">2</span>;\n  -webkit-box-orient: vertical;\n  <span class=\"hljs-attribute\">overflow</span>: hidden;\n}"
                  }
                }
              },
              {
                "id": "variable_fonts",
                "entity": {
                  "name": "Variable Fonts",
                  "nameClean": "Variable Fonts",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "variable-fonts",
                    "url": "https://caniuse.com/variable-fonts"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_fonts/Variable_fonts_guide",
                    "title": "Variable fonts guide",
                    "summary": "Variable fonts are an evolution of the OpenType font specification that enables many different variations of a typeface to be incorporated into a single file, rather than having a separate font file for every width, weight, or style. They let you access all the variations contained in a given font file via CSS and a single @font-face reference. This article will give you all you need to know to get you started using variable fonts."
                  },
                  "example": {
                    "language": "css",
                    "code": "@font-face {\n  font-family: \"Fraunces\";\n  src: url(\"fraunces.woff2\") format(\"woff2\");\n  font-weight: 200 700;\n}\n\nh2 {\n  font-family: \"Fraunces\";\n  font-variation-settings: \"wght\" 375, \"SOFT\" 100;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@font-face</span> {\n  <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">&quot;Fraunces&quot;</span>;\n  <span class=\"hljs-attribute\">src</span>: <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">&quot;fraunces.woff2&quot;</span>) <span class=\"hljs-built_in\">format</span>(<span class=\"hljs-string\">&quot;woff2&quot;</span>);\n  <span class=\"hljs-attribute\">font-weight</span>: <span class=\"hljs-number\">200</span> <span class=\"hljs-number\">700</span>;\n}\n\n<span class=\"hljs-selector-tag\">h2</span> {\n  <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">&quot;Fraunces&quot;</span>;\n  <span class=\"hljs-attribute\">font-variation-settings</span>: <span class=\"hljs-string\">&quot;wght&quot;</span> <span class=\"hljs-number\">375</span>, <span class=\"hljs-string\">&quot;SOFT&quot;</span> <span class=\"hljs-number\">100</span>;\n}"
                  }
                }
              },
              {
                "id": "text_wrap_balance",
                "entity": {
                  "name": "`text-wrap: balance`",
                  "nameClean": "text-wrap: balance",
                  "nameHtml": "<code>text-wrap: balance</code>",
                  "entityType": "feature",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/text-wrap",
                    "title": "text-wrap",
                    "summary": "The text-wrap CSS shorthand property controls how text inside an element is wrapped. The different values provide:"
                  },
                  "example": {
                    "language": "css",
                    "code": ".balanced {\n  max-inline-size: 50ch;\n  text-wrap: balance;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.balanced</span> {\n  <span class=\"hljs-attribute\">max-inline-size</span>: <span class=\"hljs-number\">50ch</span>;\n  text-wrap: balance;\n}"
                  }
                }
              },
              {
                "id": "text_wrap_pretty",
                "entity": {
                  "name": "`text-wrap: pretty`",
                  "nameClean": "text-wrap: pretty",
                  "nameHtml": "<code>text-wrap: pretty</code>",
                  "entityType": "feature",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/text-wrap",
                    "title": "text-wrap",
                    "summary": "The text-wrap CSS shorthand property controls how text inside an element is wrapped. The different values provide:"
                  },
                  "example": {
                    "language": "css",
                    "code": ".pretty {\n  text-wrap: pretty;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.pretty</span> {\n  text-wrap: pretty;\n}"
                  }
                }
              },
              {
                "id": "hanging_punctuation",
                "entity": {
                  "name": "`hanging-punctuation`",
                  "nameClean": "hanging-punctuation",
                  "nameHtml": "<code>hanging-punctuation</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-hanging-punctuation",
                    "url": "https://caniuse.com/css-hanging-punctuation"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/hanging-punctuation",
                    "title": "hanging-punctuation",
                    "summary": "The hanging-punctuation CSS property specifies whether a punctuation mark should hang at the start or end of a line of text. Hanging punctuation may be placed outside the line box."
                  },
                  "example": {
                    "language": "css",
                    "code": "p.hanging {\n  hanging-punctuation: first last;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-class\">.hanging</span> {\n  <span class=\"hljs-attribute\">hanging-punctuation</span>: first last;\n}"
                  }
                }
              },
              {
                "id": "initial_letter",
                "entity": {
                  "name": "`initial-letter`",
                  "nameClean": "initial-letter",
                  "nameHtml": "<code>initial-letter</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-initial-letter",
                    "url": "https://caniuse.com/css-initial-letter"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/initial-letter",
                    "title": "initial-letter",
                    "summary": "The initial-letter CSS property sets styling for dropped, raised, and sunken initial letters."
                  }
                }
              }
            ]
          }
        }
      }
    }
  }
}