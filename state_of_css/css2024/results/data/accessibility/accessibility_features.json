{
  "dataAPI": {
    "surveys": {
      "state_of_css": {
        "css2024": {
          "accessibility": {
            "accessibility_features": [
              {
                "id": "prefers_reduced_motion",
                "entity": {
                  "name": "`prefers-reduced-motion`",
                  "nameClean": "prefers-reduced-motion",
                  "nameHtml": "<code>prefers-reduced-motion</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "prefers-reduced-motion",
                    "url": "https://caniuse.com/prefers-reduced-motion"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion",
                    "title": "prefers-reduced-motion",
                    "summary": "The prefers-reduced-motion CSS media feature is used to detect if a user has enabled a setting on their device to minimize the amount of non-essential motion. The setting is used to convey to the browser on the device that the user prefers an interface that removes, reduces, or replaces motion-based animations."
                  },
                  "example": {
                    "language": "css",
                    "code": "@media (prefers-reduced-motion) {\n  .animation {\n    animation: none;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@media</span> (<span class=\"hljs-attribute\">prefers-reduced-motion</span>) {\n  <span class=\"hljs-selector-class\">.animation</span> {\n    <span class=\"hljs-attribute\">animation</span>: none;\n  }\n}"
                  }
                }
              },
              {
                "id": "prefers_color_scheme",
                "entity": {
                  "name": "`prefers-color-scheme`",
                  "nameClean": "prefers-color-scheme",
                  "nameHtml": "<code>prefers-color-scheme</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "prefers-color-scheme",
                    "url": "https://caniuse.com/prefers-color-scheme"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme",
                    "title": "prefers-color-scheme",
                    "summary": "The prefers-color-scheme CSS media feature is used to detect if a user has requested light or dark color themes.\n  A user indicates their preference through an operating system setting (e.g. light or dark mode) or a user agent setting."
                  },
                  "example": {
                    "language": "css",
                    "code": "@media (prefers-color-scheme: dark) {\n  .foo {\n    background: #333;\n    color: white;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@media</span> (<span class=\"hljs-attribute\">prefers-color-scheme</span>: dark) {\n  <span class=\"hljs-selector-class\">.foo</span> {\n    <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-number\">#333</span>;\n    <span class=\"hljs-attribute\">color</span>: white;\n  }\n}"
                  }
                }
              },
              {
                "id": "prefers_reduced_data",
                "entity": {
                  "name": "`prefers-reduced-data`",
                  "nameClean": "prefers-reduced-data",
                  "nameHtml": "<code>prefers-reduced-data</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_at-rules_media_prefers-reduced-data",
                    "url": "https://caniuse.com/mdn-css_at-rules_media_prefers-reduced-data"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-data",
                    "title": "prefers-reduced-data",
                    "summary": "The prefers-reduced-data CSS media feature is used to detect if the user has requested the web content that consumes less internet traffic."
                  },
                  "example": {
                    "language": "css",
                    "code": "@media (prefers-reduced-data: reduce) {\n  body {\n    font-family: system-ui;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@media</span> (<span class=\"hljs-attribute\">prefers-reduced-data</span>: reduce) {\n  <span class=\"hljs-selector-tag\">body</span> {\n    <span class=\"hljs-attribute\">font-family</span>: system-ui;\n  }\n}"
                  }
                }
              },
              {
                "id": "color_scheme",
                "entity": {
                  "name": "`color-scheme`",
                  "nameClean": "color-scheme",
                  "nameHtml": "<code>color-scheme</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_properties_color-scheme",
                    "url": "https://caniuse.com/mdn-css_properties_color-scheme"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme",
                    "title": "color-scheme",
                    "summary": "The color-scheme CSS property allows an element to indicate which color schemes it can comfortably be rendered in."
                  },
                  "example": {
                    "language": "css",
                    "code": ".foo {\n  color-scheme: light dark;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.foo</span> {\n  <span class=\"hljs-attribute\">color</span>-scheme: light dark;\n}"
                  }
                }
              },
              {
                "id": "prefers_contrast",
                "entity": {
                  "name": "`prefers-contrast`",
                  "nameClean": "prefers-contrast",
                  "nameHtml": "<code>prefers-contrast</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_at-rules_media_prefers-contrast",
                    "url": "https://caniuse.com/mdn-css_at-rules_media_prefers-contrast"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-contrast",
                    "title": "prefers-contrast",
                    "summary": "The prefers-contrast CSS media feature is used to detect whether the user has requested the web content to be presented with a lower or higher contrast."
                  },
                  "example": {
                    "language": "css",
                    "code": "@media (prefers-contrast: more) {\n  .contrast {\n    outline: 2px solid black;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@media</span> (<span class=\"hljs-attribute\">prefers-contrast</span>: more) {\n  <span class=\"hljs-selector-class\">.contrast</span> {\n    <span class=\"hljs-attribute\">outline</span>: <span class=\"hljs-number\">2px</span> solid black;\n  }\n}"
                  }
                }
              },
              {
                "id": "forced_colors",
                "entity": {
                  "name": "`forced-colors`",
                  "nameClean": "forced-colors",
                  "nameHtml": "<code>forced-colors</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_at-rules_media_forced-colors",
                    "url": "https://caniuse.com/mdn-css_at-rules_media_forced-colors"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors",
                    "title": "forced-colors",
                    "summary": "The forced-colors CSS media feature is used to detect if the user agent has enabled a forced colors mode where it enforces a user-chosen limited color palette on the page. An example of a forced colors mode is Windows High Contrast mode."
                  },
                  "example": {
                    "language": "css",
                    "code": "@media (forced-colors: active) {\n  .button {\n    border: 2px green solid;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@media</span> (<span class=\"hljs-attribute\">forced-colors</span>: active) {\n  <span class=\"hljs-selector-class\">.button</span> {\n    <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">2px</span> green solid;\n  }\n}"
                  }
                }
              },
              {
                "id": "focus_visible",
                "entity": {
                  "name": "`:focus-visible`",
                  "nameClean": ":focus-visible",
                  "nameHtml": "<code>:focus-visible</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-focus-visible",
                    "url": "https://caniuse.com/css-focus-visible"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible",
                    "title": ":focus-visible",
                    "summary": "The :focus-visible pseudo-class applies while an element matches the :focus pseudo-class and the UA (User Agent) determines via heuristics that the focus should be made evident on the element. (Many browsers show a \"focus ring\" by default in this case.)"
                  },
                  "example": {
                    "language": "css",
                    "code": ".focus-visible-only:focus-visible {\n  outline: 2px dashed darkorange;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.focus-visible-only</span><span class=\"hljs-selector-pseudo\">:focus</span>-visible {\n  <span class=\"hljs-attribute\">outline</span>: <span class=\"hljs-number\">2px</span> dashed darkorange;\n}"
                  }
                }
              },
              {
                "id": "light_dark",
                "entity": {
                  "name": "`light-dark()`",
                  "nameClean": "light-dark()",
                  "nameHtml": "<code>light-dark()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_types_color_light-dark",
                    "url": "https://caniuse.com/mdn-css_types_color_light-dark"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/light-dark",
                    "title": "light-dark()",
                    "summary": "The light-dark() CSS <color> function enables setting two colors for a property - returning one of the two colors options by detecting if the developer has set a light or dark color scheme or the user has requested light or dark color theme - without needing to encase the theme colors within a prefers-color-scheme media feature query.\n  Users are able to indicate their color-scheme preference through their operating system settings (e.g. light or dark mode) or their user agent settings. The light-dark() function enables providing two color values where any <color> value is accepted. The light-dark() CSS color function returns the first value if the user's preference is set to light or if no preference is set and the second value if the user's preference is set to dark."
                  },
                  "example": {
                    "language": "css",
                    "code": "code {\n  color: light-dark(var(--light-code), var(--dark-code));\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">code</span> {\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-built_in\">light-dark</span>(<span class=\"hljs-built_in\">var</span>(--light-code), <span class=\"hljs-built_in\">var</span>(--dark-code));\n}"
                  }
                }
              }
            ]
          }
        }
      }
    }
  }
}