{
  "dataAPI": {
    "survey": {
      "features_overview": [
        {
          "id": "subgrid",
          "entity": {
            "name": "Subgrid",
            "nameClean": null,
            "nameHtml": null,
            "homepage": null,
            "caniuse": {
              "name": "css-subgrid",
              "url": "https://caniuse.com/css-subgrid"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Subgrid",
              "title": "Subgrid",
              "summary": "Level 2 of the CSS Grid Layout specification includes a subgrid value for grid-template-columns and grid-template-rows. This guide details what subgrid does, and gives some use cases and design patterns that are solved by the feature."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 14115,
                "percentage_survey": 98.7
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "heard",
                      "count": 7888,
                      "percentage_question": 55.9,
                      "percentage_survey": 55.2
                    },
                    {
                      "id": "never_heard",
                      "count": 4797,
                      "percentage_question": 34,
                      "percentage_survey": 33.6
                    },
                    {
                      "id": "used",
                      "count": 1430,
                      "percentage_question": 10.2,
                      "percentage_survey": 10
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "writing_modes",
          "entity": {
            "name": "Writing Modes",
            "nameClean": null,
            "nameHtml": null,
            "homepage": null,
            "caniuse": {
              "name": "css-writing-mode",
              "url": "https://caniuse.com/css-writing-mode"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Writing_Modes",
              "title": "CSS Writing Modes",
              "summary": "CSS Writing Modes is a CSS module that defines various international writing modes, such as left-to-right (e.g. used by Latin and Indic scripts), right-to-left (e.g. used by Hebrew or Arabic scripts), bidirectional (used when mixing left-to-right and right-to-left scripts) and vertical (e.g. used by some Asian scripts)."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 14069,
                "percentage_survey": 98.4
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 6312,
                      "percentage_question": 44.9,
                      "percentage_survey": 44.2
                    },
                    {
                      "id": "heard",
                      "count": 5923,
                      "percentage_question": 42.1,
                      "percentage_survey": 41.4
                    },
                    {
                      "id": "used",
                      "count": 1834,
                      "percentage_question": 13.1,
                      "percentage_survey": 12.9
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "logical_properties",
          "entity": {
            "name": "CSS Logical Properties",
            "nameClean": null,
            "nameHtml": null,
            "homepage": null,
            "caniuse": {
              "name": "css-logical-props",
              "url": "https://caniuse.com/css-logical-props"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Logical_Properties",
              "title": "CSS Logical Properties and Values",
              "summary": "CSS Logical Properties and Values is a module of CSS introducing logical properties and values that provide the ability to control layout through logical, rather than physical, direction and dimension mappings."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 13998,
                "percentage_survey": 97.9
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 6229,
                      "percentage_question": 44.5,
                      "percentage_survey": 43.6
                    },
                    {
                      "id": "used",
                      "count": 3898,
                      "percentage_question": 27.9,
                      "percentage_survey": 27.3
                    },
                    {
                      "id": "heard",
                      "count": 3871,
                      "percentage_question": 27.7,
                      "percentage_survey": 27.1
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "aspect_ratio",
          "entity": {
            "name": "`aspect-ratio`",
            "nameClean": "aspect-ratio",
            "nameHtml": "<code>aspect-ratio</code>",
            "homepage": null,
            "caniuse": {
              "name": "mdn-css_properties_aspect-ratio",
              "url": "https://caniuse.com/mdn-css_properties_aspect-ratio"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio",
              "title": "aspect-ratio",
              "summary": "The aspect-ratio CSS property sets a preferred aspect ratio for the box, which will be used in the calculation of auto sizes and some other layout functions."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 14001,
                "percentage_survey": 97.9
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 7690,
                      "percentage_question": 55,
                      "percentage_survey": 53.8
                    },
                    {
                      "id": "heard",
                      "count": 4173,
                      "percentage_question": 29.9,
                      "percentage_survey": 29.2
                    },
                    {
                      "id": "never_heard",
                      "count": 2138,
                      "percentage_question": 15.3,
                      "percentage_survey": 15
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "content_visibility",
          "entity": {
            "name": "`content-visibility`",
            "nameClean": "content-visibility",
            "nameHtml": "<code>content-visibility</code>",
            "homepage": null,
            "caniuse": {
              "name": "css-content-visibility",
              "url": "https://caniuse.com/css-content-visibility"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/content-visibility",
              "title": "content-visibility",
              "summary": "The content-visibility CSS property controls whether or not an element renders its contents at all, along with forcing a strong set of containments, allowing user agents to potentially omit large swathes of layout and rendering work until it becomes needed. Basically it enables the user agent to skip an element's rendering work (including layout and painting) until it is needed â€” which makes the initial page load much faster."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 13892,
                "percentage_survey": 97.1
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 7016,
                      "percentage_question": 50.6,
                      "percentage_survey": 49.1
                    },
                    {
                      "id": "heard",
                      "count": 3681,
                      "percentage_question": 26.5,
                      "percentage_survey": 25.8
                    },
                    {
                      "id": "used",
                      "count": 3195,
                      "percentage_question": 23,
                      "percentage_survey": 22.4
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "flexbox_gap",
          "entity": {
            "name": "Flexbox `gap`",
            "nameClean": "Flexbox gap",
            "nameHtml": "Flexbox <code>gap</code>",
            "homepage": null,
            "caniuse": {
              "name": "flexbox-gap",
              "url": "https://caniuse.com/flexbox-gap"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/gap",
              "title": "gap",
              "summary": "The gap CSS property sets the gaps (gutters) between rows and columns. It is a shorthand for row-gap and column-gap."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 13994,
                "percentage_survey": 97.8
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 11242,
                      "percentage_question": 80.4,
                      "percentage_survey": 78.6
                    },
                    {
                      "id": "heard",
                      "count": 1588,
                      "percentage_question": 11.4,
                      "percentage_survey": 11.1
                    },
                    {
                      "id": "never_heard",
                      "count": 1164,
                      "percentage_question": 8.4,
                      "percentage_survey": 8.2
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "at_container",
          "entity": {
            "name": "`@container`",
            "nameClean": "@container",
            "nameHtml": "<code>@container</code>",
            "homepage": null,
            "caniuse": {
              "name": "css-container-queries",
              "url": "https://caniuse.com/css-container-queries"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Container_Queries",
              "title": "CSS Container Queries",
              "summary": "CSS containment provides a way to isolate parts of a page and declare to the browser these parts are independent from the rest of the page in terms of styles and layout."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 13939,
                "percentage_survey": 97.5
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "heard",
                      "count": 8100,
                      "percentage_question": 58.2,
                      "percentage_survey": 56.7
                    },
                    {
                      "id": "never_heard",
                      "count": 4087,
                      "percentage_question": 29.4,
                      "percentage_survey": 28.6
                    },
                    {
                      "id": "used",
                      "count": 1752,
                      "percentage_question": 12.6,
                      "percentage_survey": 12.3
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "object_view_box",
          "entity": {
            "name": "`object-view-box`",
            "nameClean": "object-view-box",
            "nameHtml": "<code>object-view-box</code>",
            "homepage": null,
            "caniuse": null,
            "mdn": null
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 13871,
                "percentage_survey": 97
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 11806,
                      "percentage_question": 85.2,
                      "percentage_survey": 82.6
                    },
                    {
                      "id": "heard",
                      "count": 1677,
                      "percentage_question": 12.1,
                      "percentage_survey": 11.8
                    },
                    {
                      "id": "used",
                      "count": 388,
                      "percentage_question": 2.8,
                      "percentage_survey": 2.8
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "viewport_percentage_length_units",
          "entity": {
            "name": "Viewport-Percentage Length Units",
            "nameClean": null,
            "nameHtml": null,
            "homepage": null,
            "caniuse": {
              "name": "mdn-css_types_length_viewport_percentage_units_small",
              "url": "https://caniuse.com/mdn-css_types_length_viewport_percentage_units_small"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/length",
              "title": "<length>",
              "summary": "The <length> CSS data type represents a distance value. Lengths can be used in numerous CSS properties, such as width, height, margin, padding, border-width, font-size, and text-shadow."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 13865,
                "percentage_survey": 96.9
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 8139,
                      "percentage_question": 58.8,
                      "percentage_survey": 56.9
                    },
                    {
                      "id": "heard",
                      "count": 4093,
                      "percentage_question": 29.6,
                      "percentage_survey": 28.7
                    },
                    {
                      "id": "used",
                      "count": 1633,
                      "percentage_question": 11.8,
                      "percentage_survey": 11.5
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "media_queries_range_contexts",
          "entity": {
            "name": "Media Queries Range Contexts",
            "nameClean": null,
            "nameHtml": null,
            "homepage": null,
            "caniuse": {
              "name": "css-media-range-syntax",
              "url": "https://caniuse.com/css-media-range-syntax"
            },
            "mdn": null
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 13859,
                "percentage_survey": 96.9
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "heard",
                      "count": 5922,
                      "percentage_question": 42.8,
                      "percentage_survey": 41.4
                    },
                    {
                      "id": "never_heard",
                      "count": 5920,
                      "percentage_question": 42.8,
                      "percentage_survey": 41.4
                    },
                    {
                      "id": "used",
                      "count": 2017,
                      "percentage_question": 14.6,
                      "percentage_survey": 14.1
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "blend_modes",
          "entity": {
            "name": "`blend-mode`",
            "nameClean": "blend-mode",
            "nameHtml": "<code>blend-mode</code>",
            "homepage": null,
            "caniuse": {
              "name": "css-mixblendmode",
              "url": "https://caniuse.com/css-mixblendmode"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/blend-mode",
              "title": "<blend-mode>",
              "summary": "The <blend-mode> CSS data type describes how colors should appear when elements overlap. It is used in the background-blend-mode and mix-blend-mode properties."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 12421,
                "percentage_survey": 86.8
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 4740,
                      "percentage_question": 38.2,
                      "percentage_survey": 33.2
                    },
                    {
                      "id": "never_heard",
                      "count": 4431,
                      "percentage_question": 35.7,
                      "percentage_survey": 31
                    },
                    {
                      "id": "heard",
                      "count": 3250,
                      "percentage_question": 26.2,
                      "percentage_survey": 22.8
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "filter_effects",
          "entity": {
            "name": "Filters & Effects",
            "nameClean": "Filters &amp; Effects",
            "nameHtml": "Filters &amp; Effects",
            "homepage": null,
            "caniuse": {
              "name": "css-filters",
              "url": "https://caniuse.com/css-filters"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
              "title": "filter",
              "summary": "The filter CSS property applies graphical effects like blur or color shift to an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 12426,
                "percentage_survey": 86.9
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 8993,
                      "percentage_question": 72.4,
                      "percentage_survey": 62.9
                    },
                    {
                      "id": "heard",
                      "count": 2400,
                      "percentage_question": 19.4,
                      "percentage_survey": 16.8
                    },
                    {
                      "id": "never_heard",
                      "count": 1033,
                      "percentage_question": 8.4,
                      "percentage_survey": 7.3
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "backdrop_filter",
          "entity": {
            "name": "`backdrop-filter`",
            "nameClean": "backdrop-filter",
            "nameHtml": "<code>backdrop-filter</code>",
            "homepage": null,
            "caniuse": {
              "name": "css-backdrop-filter",
              "url": "https://caniuse.com/css-backdrop-filter"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter",
              "title": "backdrop-filter",
              "summary": "The backdrop-filter CSS property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything behind the element, to see the effect you must make the element or its background at least partially transparent."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 12400,
                "percentage_survey": 86.7
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 6016,
                      "percentage_question": 48.6,
                      "percentage_survey": 42.1
                    },
                    {
                      "id": "never_heard",
                      "count": 3929,
                      "percentage_question": 31.7,
                      "percentage_survey": 27.5
                    },
                    {
                      "id": "heard",
                      "count": 2455,
                      "percentage_question": 19.8,
                      "percentage_survey": 17.2
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "intrinsic_sizing",
          "entity": {
            "name": "Intrinsic Sizing",
            "nameClean": null,
            "nameHtml": null,
            "homepage": null,
            "caniuse": {
              "name": "intrinsic-width",
              "url": "https://caniuse.com/intrinsic-width"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/min-content",
              "title": "min-content",
              "summary": "The min-content sizing keyword represents the intrinsic minimum width of the content. For text content this means that the content will take all soft-wrapping opportunities, becoming as small as the longest word."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 12406,
                "percentage_survey": 86.7
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 7522,
                      "percentage_question": 60.7,
                      "percentage_survey": 52.6
                    },
                    {
                      "id": "never_heard",
                      "count": 2502,
                      "percentage_question": 20.2,
                      "percentage_survey": 17.5
                    },
                    {
                      "id": "heard",
                      "count": 2382,
                      "percentage_question": 19.3,
                      "percentage_survey": 16.7
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "conic_gradient",
          "entity": {
            "name": "`conic-gradient()`",
            "nameClean": "conic-gradient()",
            "nameHtml": "<code>conic-gradient()</code>",
            "homepage": null,
            "caniuse": {
              "name": "mdn-css_types_image_gradient_conic-gradient",
              "url": "https://caniuse.com/mdn-css_types_image_gradient_conic-gradient"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/conic-gradient",
              "title": "conic-gradient()",
              "summary": "The conic-gradient() CSS function creates an image consisting of a gradient with color transitions rotated around a center point (rather than radiating from the center). Example conic gradients include pie charts and color wheels. The result of the conic-gradient() function is an object of the <gradient> data type, which is a special kind of <image>."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 12407,
                "percentage_survey": 86.8
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 5843,
                      "percentage_question": 47.1,
                      "percentage_survey": 40.9
                    },
                    {
                      "id": "heard",
                      "count": 4593,
                      "percentage_question": 37.1,
                      "percentage_survey": 32.1
                    },
                    {
                      "id": "used",
                      "count": 1971,
                      "percentage_question": 15.9,
                      "percentage_survey": 13.8
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "color_function",
          "entity": {
            "name": "`color()`",
            "nameClean": "color()",
            "nameHtml": "<code>color()</code>",
            "homepage": null,
            "caniuse": {
              "name": "css-color-function",
              "url": "https://caniuse.com/css-color-function"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color",
              "title": "color()",
              "summary": "The color() functional notation allows a color to be specified in a particular, specified colorspace rather than the implicit sRGB colorspace that most of the other color functions operate in."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 11916,
                "percentage_survey": 83.3
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 8001,
                      "percentage_question": 67.2,
                      "percentage_survey": 56
                    },
                    {
                      "id": "heard",
                      "count": 2971,
                      "percentage_question": 25,
                      "percentage_survey": 20.8
                    },
                    {
                      "id": "used",
                      "count": 944,
                      "percentage_question": 8,
                      "percentage_survey": 6.6
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "accent_color",
          "entity": {
            "name": "`accent-color`",
            "nameClean": "accent-color",
            "nameHtml": "<code>accent-color</code>",
            "homepage": null,
            "caniuse": {
              "name": "mdn-css_properties_accent-color",
              "url": "https://caniuse.com/mdn-css_properties_accent-color"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/accent-color",
              "title": "accent-color",
              "summary": "The accent-color CSS property sets the accent color for user-interface controls generated by some elements."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 11918,
                "percentage_survey": 83.3
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 6568,
                      "percentage_question": 55.2,
                      "percentage_survey": 45.9
                    },
                    {
                      "id": "heard",
                      "count": 3247,
                      "percentage_question": 27.3,
                      "percentage_survey": 22.7
                    },
                    {
                      "id": "used",
                      "count": 2103,
                      "percentage_question": 17.7,
                      "percentage_survey": 14.7
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "currentcolor",
          "entity": {
            "name": "`currentcolor`",
            "nameClean": "currentcolor",
            "nameHtml": "<code>currentcolor</code>",
            "homepage": null,
            "caniuse": {
              "name": "currentcolor",
              "url": "https://caniuse.com/currentcolor"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value",
              "title": "<color>",
              "summary": "The <color> CSS data type represents a color.\n  A <color> may also include an alpha-channel transparency value, indicating how the color should composite with its background."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 11914,
                "percentage_survey": 83.3
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 5630,
                      "percentage_question": 47.3,
                      "percentage_survey": 39.4
                    },
                    {
                      "id": "never_heard",
                      "count": 4286,
                      "percentage_question": 36,
                      "percentage_survey": 30
                    },
                    {
                      "id": "heard",
                      "count": 1998,
                      "percentage_question": 16.8,
                      "percentage_survey": 14
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "color_mix",
          "entity": {
            "name": "`color-mix()`",
            "nameClean": "color-mix()",
            "nameHtml": "<code>color-mix()</code>",
            "homepage": null,
            "caniuse": {
              "name": "mdn-css_types_color_color-mix",
              "url": "https://caniuse.com/mdn-css_types_color_color-mix"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color-mix",
              "title": "color-mix()",
              "summary": "The color-mix() functional notation takes two color values and returns the result of mixing them in a given colorspace by a given amount."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 11876,
                "percentage_survey": 83
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 8885,
                      "percentage_question": 74.9,
                      "percentage_survey": 62.1
                    },
                    {
                      "id": "heard",
                      "count": 2644,
                      "percentage_question": 22.3,
                      "percentage_survey": 18.5
                    },
                    {
                      "id": "used",
                      "count": 347,
                      "percentage_question": 3,
                      "percentage_survey": 2.5
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "wide_gamut_colors",
          "entity": {
            "name": "Wide Gamut Colors",
            "nameClean": null,
            "nameHtml": null,
            "homepage": null,
            "caniuse": {
              "name": "css-lch-lab",
              "url": "https://caniuse.com/css-lch-lab"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/lch",
              "title": "lch()",
              "summary": "The lch() functional notation expresses a given color in the LCH color space. It has the same L axis as lab(), but uses polar coordinates C (Chroma) and H (Hue)."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 11894,
                "percentage_survey": 83.2
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 8438,
                      "percentage_question": 71,
                      "percentage_survey": 59
                    },
                    {
                      "id": "heard",
                      "count": 3157,
                      "percentage_question": 26.6,
                      "percentage_survey": 22.1
                    },
                    {
                      "id": "used",
                      "count": 299,
                      "percentage_question": 2.6,
                      "percentage_survey": 2.1
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "relative_colors",
          "entity": {
            "name": "Relative Colors",
            "nameClean": null,
            "nameHtml": null,
            "homepage": null,
            "caniuse": null,
            "mdn": null
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 11852,
                "percentage_survey": 82.9
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 8131,
                      "percentage_question": 68.7,
                      "percentage_survey": 56.9
                    },
                    {
                      "id": "heard",
                      "count": 2845,
                      "percentage_question": 24.1,
                      "percentage_survey": 19.9
                    },
                    {
                      "id": "used",
                      "count": 876,
                      "percentage_question": 7.4,
                      "percentage_survey": 6.2
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "gradient_color_spaces",
          "entity": {
            "name": "Gradient Color Spaces",
            "nameClean": null,
            "nameHtml": null,
            "homepage": null,
            "caniuse": null,
            "mdn": null
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 11905,
                "percentage_survey": 83.2
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 7261,
                      "percentage_question": 61,
                      "percentage_survey": 50.8
                    },
                    {
                      "id": "heard",
                      "count": 2400,
                      "percentage_question": 20.2,
                      "percentage_survey": 16.8
                    },
                    {
                      "id": "used",
                      "count": 2244,
                      "percentage_question": 18.9,
                      "percentage_survey": 15.7
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "scroll_snap",
          "entity": {
            "name": "Scroll Snap",
            "nameClean": null,
            "nameHtml": null,
            "homepage": null,
            "caniuse": {
              "name": "css-snappoints",
              "url": "https://caniuse.com/css-snappoints"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Scroll_Snap",
              "title": "CSS Scroll Snap",
              "summary": "CSS Scroll Snap is a module of CSS that introduces scroll snap positions, which enforce the scroll positions that a scroll container's scrollport may end at after a scrolling operation has completed."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 11398,
                "percentage_survey": 79.7
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 4043,
                      "percentage_question": 35.5,
                      "percentage_survey": 28.3
                    },
                    {
                      "id": "used",
                      "count": 3848,
                      "percentage_question": 33.8,
                      "percentage_survey": 26.9
                    },
                    {
                      "id": "heard",
                      "count": 3507,
                      "percentage_question": 30.8,
                      "percentage_survey": 24.6
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "overscroll_behavior",
          "entity": {
            "name": "`overscroll-behavior`",
            "nameClean": "overscroll-behavior",
            "nameHtml": "<code>overscroll-behavior</code>",
            "homepage": null,
            "caniuse": {
              "name": "css-overscroll-behavior",
              "url": "https://caniuse.com/css-overscroll-behavior"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior",
              "title": "overscroll-behavior",
              "summary": "The overscroll-behavior CSS property sets what a browser does when reaching the boundary of a scrolling area. It's a shorthand for overscroll-behavior-x and overscroll-behavior-y."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 11389,
                "percentage_survey": 79.6
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 6319,
                      "percentage_question": 55.5,
                      "percentage_survey": 44.2
                    },
                    {
                      "id": "used",
                      "count": 2669,
                      "percentage_question": 23.5,
                      "percentage_survey": 18.7
                    },
                    {
                      "id": "heard",
                      "count": 2401,
                      "percentage_question": 21.1,
                      "percentage_survey": 16.8
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "touch_action",
          "entity": {
            "name": "`touch-action`",
            "nameClean": "touch-action",
            "nameHtml": "<code>touch-action</code>",
            "homepage": null,
            "caniuse": {
              "name": "css-touch-action",
              "url": "https://caniuse.com/css-touch-action"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action",
              "title": "touch-action",
              "summary": "The touch-action CSS property sets how an element's region can be manipulated by a touchscreen user (for example, by zooming features built into the browser)."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 11359,
                "percentage_survey": 79.4
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 7149,
                      "percentage_question": 63,
                      "percentage_survey": 50
                    },
                    {
                      "id": "heard",
                      "count": 2207,
                      "percentage_question": 19.5,
                      "percentage_survey": 15.5
                    },
                    {
                      "id": "used",
                      "count": 2003,
                      "percentage_question": 17.7,
                      "percentage_survey": 14
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "scroll_behavior",
          "entity": {
            "name": "`scroll-behavior`",
            "nameClean": "scroll-behavior",
            "nameHtml": "<code>scroll-behavior</code>",
            "homepage": null,
            "caniuse": {
              "name": "css-scroll-behavior",
              "url": "https://caniuse.com/css-scroll-behavior"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior",
              "title": "scroll-behavior",
              "summary": "The scroll-behavior CSS property sets the behavior for a scrolling box when scrolling is triggered by the navigation or CSSOM scrolling APIs."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 11387,
                "percentage_survey": 79.6
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 6933,
                      "percentage_question": 60.9,
                      "percentage_survey": 48.5
                    },
                    {
                      "id": "never_heard",
                      "count": 2272,
                      "percentage_question": 20,
                      "percentage_survey": 15.9
                    },
                    {
                      "id": "heard",
                      "count": 2182,
                      "percentage_question": 19.2,
                      "percentage_survey": 15.3
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "scrollbar_gutter",
          "entity": {
            "name": "`scrollbar-gutter`",
            "nameClean": "scrollbar-gutter",
            "nameHtml": "<code>scrollbar-gutter</code>",
            "homepage": null,
            "caniuse": {
              "name": "mdn-css_properties_scrollbar-gutter",
              "url": "https://caniuse.com/mdn-css_properties_scrollbar-gutter"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-gutter",
              "title": "scrollbar-gutter",
              "summary": "The scrollbar-gutter CSS property allows authors to reserve space for the scrollbar, preventing unwanted layout changes as the content grows while also avoiding unnecessary visuals when scrolling isn't needed."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 11386,
                "percentage_survey": 79.6
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 8212,
                      "percentage_question": 72.2,
                      "percentage_survey": 57.4
                    },
                    {
                      "id": "heard",
                      "count": 2002,
                      "percentage_question": 17.6,
                      "percentage_survey": 14
                    },
                    {
                      "id": "used",
                      "count": 1172,
                      "percentage_question": 10.3,
                      "percentage_survey": 8.2
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "font_display",
          "entity": {
            "name": "`font-display`",
            "nameClean": "font-display",
            "nameHtml": "<code>font-display</code>",
            "homepage": null,
            "caniuse": {
              "name": "css-font-rendering-controls",
              "url": "https://caniuse.com/css-font-rendering-controls"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display",
              "title": "font-display",
              "summary": "The font-display descriptor determines how a font face is displayed based on whether and when it is downloaded and ready to use."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 11183,
                "percentage_survey": 78.2
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 5017,
                      "percentage_question": 44.9,
                      "percentage_survey": 35.1
                    },
                    {
                      "id": "used",
                      "count": 4242,
                      "percentage_question": 38,
                      "percentage_survey": 29.7
                    },
                    {
                      "id": "heard",
                      "count": 1924,
                      "percentage_question": 17.3,
                      "percentage_survey": 13.5
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "line_clamp",
          "entity": {
            "name": "`line-clamp`",
            "nameClean": "line-clamp",
            "nameHtml": "<code>line-clamp</code>",
            "homepage": null,
            "caniuse": {
              "name": "css-line-clamp",
              "url": "https://caniuse.com/css-line-clamp"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-line-clamp",
              "title": "-webkit-line-clamp",
              "summary": "The -webkit-line-clamp CSS property allows limiting of the contents of a block to the specified number of lines."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 11163,
                "percentage_survey": 78.1
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 5578,
                      "percentage_question": 50,
                      "percentage_survey": 39
                    },
                    {
                      "id": "used",
                      "count": 3525,
                      "percentage_question": 31.6,
                      "percentage_survey": 24.7
                    },
                    {
                      "id": "heard",
                      "count": 2060,
                      "percentage_question": 18.5,
                      "percentage_survey": 14.4
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "variable_fonts",
          "entity": {
            "name": "Variable Fonts",
            "nameClean": null,
            "nameHtml": null,
            "homepage": null,
            "caniuse": {
              "name": "variable-fonts",
              "url": "https://caniuse.com/variable-fonts"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Fonts/Variable_Fonts_Guide",
              "title": "Variable fonts guide",
              "summary": "Variable fonts are an evolution of the OpenType font specification that enables many different variations of a typeface to be incorporated into a single file, rather than having a separate font file for every width, weight, or style. They let you access all the variations contained in a given font file via CSS and a single @font-face reference. This article will give you all you need to know to get you started using variable fonts."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 11157,
                "percentage_survey": 78
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "heard",
                      "count": 4059,
                      "percentage_question": 36.4,
                      "percentage_survey": 28.4
                    },
                    {
                      "id": "never_heard",
                      "count": 3842,
                      "percentage_question": 34.5,
                      "percentage_survey": 26.9
                    },
                    {
                      "id": "used",
                      "count": 3256,
                      "percentage_question": 29.2,
                      "percentage_survey": 22.8
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "font_palette",
          "entity": {
            "name": "`font-palette`",
            "nameClean": "font-palette",
            "nameHtml": "<code>font-palette</code>",
            "homepage": null,
            "caniuse": {
              "name": "css-font-palette",
              "url": "https://caniuse.com/css-font-palette"
            },
            "mdn": null
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 11152,
                "percentage_survey": 78
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 10179,
                      "percentage_question": 91.3,
                      "percentage_survey": 71.2
                    },
                    {
                      "id": "heard",
                      "count": 843,
                      "percentage_question": 7.6,
                      "percentage_survey": 5.9
                    },
                    {
                      "id": "used",
                      "count": 130,
                      "percentage_question": 1.2,
                      "percentage_survey": 1
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "prefers_reduced_motion",
          "entity": {
            "name": "`prefers-reduced-motion`",
            "nameClean": "prefers-reduced-motion",
            "nameHtml": "<code>prefers-reduced-motion</code>",
            "homepage": null,
            "caniuse": {
              "name": "prefers-reduced-motion",
              "url": "https://caniuse.com/prefers-reduced-motion"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion",
              "title": "prefers-reduced-motion",
              "summary": "The prefers-reduced-motion CSS media feature is used to detect if the user has requested that the system minimize the amount of non-essential motion it uses."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10985,
                "percentage_survey": 76.8
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 3846,
                      "percentage_question": 35.1,
                      "percentage_survey": 26.9
                    },
                    {
                      "id": "heard",
                      "count": 3780,
                      "percentage_question": 34.5,
                      "percentage_survey": 26.5
                    },
                    {
                      "id": "never_heard",
                      "count": 3359,
                      "percentage_question": 30.6,
                      "percentage_survey": 23.5
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "prefers_color_scheme",
          "entity": {
            "name": "`prefers-color-scheme`",
            "nameClean": "prefers-color-scheme",
            "nameHtml": "<code>prefers-color-scheme</code>",
            "homepage": null,
            "caniuse": {
              "name": "prefers-color-scheme",
              "url": "https://caniuse.com/prefers-color-scheme"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme",
              "title": "prefers-color-scheme",
              "summary": "The prefers-color-scheme CSS media feature is used to detect if a user has requested light or dark color themes.\n  A user indicates their preference through an operating system setting (e.g. light or dark mode) or a user agent setting."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10976,
                "percentage_survey": 76.8
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 4329,
                      "percentage_question": 39.5,
                      "percentage_survey": 30.3
                    },
                    {
                      "id": "heard",
                      "count": 3663,
                      "percentage_question": 33.4,
                      "percentage_survey": 25.6
                    },
                    {
                      "id": "never_heard",
                      "count": 2984,
                      "percentage_question": 27.2,
                      "percentage_survey": 20.9
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "prefers_reduced_data",
          "entity": {
            "name": "`prefers-reduced-data`",
            "nameClean": "prefers-reduced-data",
            "nameHtml": "<code>prefers-reduced-data</code>",
            "homepage": null,
            "caniuse": {
              "name": "mdn-css_at-rules_media_prefers-reduced-data",
              "url": "https://caniuse.com/mdn-css_at-rules_media_prefers-reduced-data"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-data",
              "title": "prefers-reduced-data",
              "summary": "The prefers-reduced-data CSS media feature is used to detect if the user has requested the web content that consumes less internet traffic."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10949,
                "percentage_survey": 76.6
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 6600,
                      "percentage_question": 60.3,
                      "percentage_survey": 46.2
                    },
                    {
                      "id": "heard",
                      "count": 3718,
                      "percentage_question": 34,
                      "percentage_survey": 26
                    },
                    {
                      "id": "used",
                      "count": 631,
                      "percentage_question": 5.8,
                      "percentage_survey": 4.5
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "color_contrast",
          "entity": {
            "name": "`color-contrast()`",
            "nameClean": "color-contrast()",
            "nameHtml": "<code>color-contrast()</code>",
            "homepage": null,
            "caniuse": {
              "name": "mdn-css_types_color_color-contrast",
              "url": "https://caniuse.com/mdn-css_types_color_color-contrast"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color-contrast",
              "title": "color-contrast()",
              "summary": "The color-contrast() functional notation takes a color value and compares it to a list of other color values, selecting the one with the highest contrast from the list."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10960,
                "percentage_survey": 76.6
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 7995,
                      "percentage_question": 73,
                      "percentage_survey": 55.9
                    },
                    {
                      "id": "heard",
                      "count": 2551,
                      "percentage_question": 23.3,
                      "percentage_survey": 17.9
                    },
                    {
                      "id": "used",
                      "count": 414,
                      "percentage_question": 3.8,
                      "percentage_survey": 2.9
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "color_scheme",
          "entity": {
            "name": "`color-scheme`",
            "nameClean": "color-scheme",
            "nameHtml": "<code>color-scheme</code>",
            "homepage": null,
            "caniuse": {
              "name": "mdn-css_properties_color-scheme",
              "url": "https://caniuse.com/mdn-css_properties_color-scheme"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme",
              "title": "color-scheme",
              "summary": "The color-scheme CSS property allows an element to indicate which color schemes it can comfortably be rendered in."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10946,
                "percentage_survey": 76.5
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 6649,
                      "percentage_question": 60.8,
                      "percentage_survey": 46.5
                    },
                    {
                      "id": "heard",
                      "count": 2731,
                      "percentage_question": 25,
                      "percentage_survey": 19.1
                    },
                    {
                      "id": "used",
                      "count": 1566,
                      "percentage_question": 14.4,
                      "percentage_survey": 11
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "prefers_contrast",
          "entity": {
            "name": "`prefers-contrast`",
            "nameClean": "prefers-contrast",
            "nameHtml": "<code>prefers-contrast</code>",
            "homepage": null,
            "caniuse": {
              "name": "mdn-css_at-rules_media_prefers-contrast",
              "url": "https://caniuse.com/mdn-css_at-rules_media_prefers-contrast"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-contrast",
              "title": "prefers-contrast",
              "summary": "The prefers-contrast CSS media feature is used to detect whether the user has requested the web content to be presented with a lower or higher contrast."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10937,
                "percentage_survey": 76.5
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 7311,
                      "percentage_question": 66.9,
                      "percentage_survey": 51.1
                    },
                    {
                      "id": "heard",
                      "count": 3131,
                      "percentage_question": 28.7,
                      "percentage_survey": 21.9
                    },
                    {
                      "id": "used",
                      "count": 495,
                      "percentage_question": 4.6,
                      "percentage_survey": 3.5
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "forced_colors",
          "entity": {
            "name": "`forced-colors`",
            "nameClean": "forced-colors",
            "nameHtml": "<code>forced-colors</code>",
            "homepage": null,
            "caniuse": {
              "name": "mdn-css_at-rules_media_forced-colors",
              "url": "https://caniuse.com/mdn-css_at-rules_media_forced-colors"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors",
              "title": "forced-colors",
              "summary": "The forced-colors CSS media feature is used to detect if the user agent has enabled a forced colors mode where it enforces a user-chosen limited color palette on the page. An example of a forced colors mode is Windows High Contrast mode."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10933,
                "percentage_survey": 76.5
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 9969,
                      "percentage_question": 91.2,
                      "percentage_survey": 69.7
                    },
                    {
                      "id": "heard",
                      "count": 785,
                      "percentage_question": 7.2,
                      "percentage_survey": 5.5
                    },
                    {
                      "id": "used",
                      "count": 179,
                      "percentage_question": 1.7,
                      "percentage_survey": 1.3
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "focus_visible",
          "entity": {
            "name": "`:focus-visible`",
            "nameClean": ":focus-visible",
            "nameHtml": "<code>:focus-visible</code>",
            "homepage": null,
            "caniuse": {
              "name": "css-focus-visible",
              "url": "https://caniuse.com/css-focus-visible"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible",
              "title": ":focus-visible",
              "summary": "The :focus-visible pseudo-class applies while an element matches the :focus pseudo-class and the UA (User Agent) determines via heuristics that the focus should be made evident on the element. (Many browsers show a \"focus ring\" by default in this case.)"
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10960,
                "percentage_survey": 76.6
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 4382,
                      "percentage_question": 40,
                      "percentage_survey": 30.7
                    },
                    {
                      "id": "never_heard",
                      "count": 4045,
                      "percentage_question": 37,
                      "percentage_survey": 28.3
                    },
                    {
                      "id": "heard",
                      "count": 2533,
                      "percentage_question": 23.2,
                      "percentage_survey": 17.8
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "marker",
          "entity": {
            "name": "`::marker`",
            "nameClean": "::marker",
            "nameHtml": "<code>::marker</code>",
            "homepage": null,
            "caniuse": {
              "name": "css-marker-pseudo",
              "url": "https://caniuse.com/css-marker-pseudo"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/::marker",
              "title": "::marker",
              "summary": "The ::marker CSS pseudo-element selects the marker box of a list item, which typically contains a bullet or number. It works on any element or pseudo-element set to display: list-item, such as the <li> and <summary> elements."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10897,
                "percentage_survey": 76.2
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 5226,
                      "percentage_question": 48,
                      "percentage_survey": 36.6
                    },
                    {
                      "id": "used",
                      "count": 3373,
                      "percentage_question": 31,
                      "percentage_survey": 23.6
                    },
                    {
                      "id": "heard",
                      "count": 2298,
                      "percentage_question": 21.1,
                      "percentage_survey": 16.1
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "has_selector",
          "entity": {
            "name": "`:has()`",
            "nameClean": ":has()",
            "nameHtml": "<code>:has()</code>",
            "homepage": null,
            "caniuse": {
              "name": "css-has",
              "url": "https://caniuse.com/css-has"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/:has",
              "title": ":has()",
              "summary": "The functional :has() CSS pseudo-class represents an element if any of the relative selectors that are passed as an argument match at least one element when anchored against this element. This pseudo-class presents a way of selecting a parent element or a previous sibling element with respect to a reference element by taking a forgiving relative selector list as an argument."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10925,
                "percentage_survey": 76.4
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "heard",
                      "count": 5953,
                      "percentage_question": 54.5,
                      "percentage_survey": 41.7
                    },
                    {
                      "id": "used",
                      "count": 3794,
                      "percentage_question": 34.8,
                      "percentage_survey": 26.6
                    },
                    {
                      "id": "never_heard",
                      "count": 1178,
                      "percentage_question": 10.8,
                      "percentage_survey": 8.3
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "where_selector",
          "entity": {
            "name": "`:where()`",
            "nameClean": ":where()",
            "nameHtml": "<code>:where()</code>",
            "homepage": null,
            "caniuse": {
              "name": "css-where",
              "url": "https://caniuse.com/css-where"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/:where",
              "title": ":where()",
              "summary": "The :where() CSS pseudo-class function takes a selector list as its argument, and selects any element that can be selected by one of the selectors in that list."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10917,
                "percentage_survey": 76.3
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "heard",
                      "count": 4673,
                      "percentage_question": 42.9,
                      "percentage_survey": 32.7
                    },
                    {
                      "id": "never_heard",
                      "count": 4292,
                      "percentage_question": 39.4,
                      "percentage_survey": 30
                    },
                    {
                      "id": "used",
                      "count": 1952,
                      "percentage_question": 17.9,
                      "percentage_survey": 13.7
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "variables",
          "entity": {
            "name": "Variables",
            "nameClean": null,
            "nameHtml": null,
            "homepage": null,
            "caniuse": {
              "name": "css-variables",
              "url": "https://caniuse.com/css-variables"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Variables",
              "title": "CSS Custom Properties for Cascading Variables",
              "summary": "CSS Custom Properties for Cascading Variables is a CSS module that allows for the creation of custom properties that can be used over and over."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10789,
                "percentage_survey": 75.4
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 9563,
                      "percentage_question": 88.7,
                      "percentage_survey": 66.9
                    },
                    {
                      "id": "heard",
                      "count": 942,
                      "percentage_question": 8.8,
                      "percentage_survey": 6.6
                    },
                    {
                      "id": "never_heard",
                      "count": 284,
                      "percentage_question": 2.7,
                      "percentage_survey": 2
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "at_property",
          "entity": {
            "name": "`@property`",
            "nameClean": "@property",
            "nameHtml": "<code>@property</code>",
            "homepage": null,
            "caniuse": {
              "name": "mdn-css_at-rules_property",
              "url": "https://caniuse.com/mdn-css_at-rules_property"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@property",
              "title": "@property",
              "summary": "The @property CSS at-rule is part of the CSS Houdini umbrella of APIs, it allows developers to explicitly define their css custom properties, allowing for property type checking, setting default values, and define whether a property can inherit values or not."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10760,
                "percentage_survey": 75.2
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 6921,
                      "percentage_question": 64.4,
                      "percentage_survey": 48.4
                    },
                    {
                      "id": "heard",
                      "count": 3066,
                      "percentage_question": 28.5,
                      "percentage_survey": 21.5
                    },
                    {
                      "id": "used",
                      "count": 773,
                      "percentage_question": 7.2,
                      "percentage_survey": 5.5
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "feature_support_queries",
          "entity": {
            "name": "`@supports`",
            "nameClean": "@supports",
            "nameHtml": "<code>@supports</code>",
            "homepage": null,
            "caniuse": {
              "name": "css-supports-api",
              "url": "https://caniuse.com/css-supports-api"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@supports",
              "title": "@supports",
              "summary": "The @supports CSS at-rule lets you specify CSS declarations that depend on a browser's support for CSS features.\n  Using this at-rule is commonly called a feature query.\n  The rule must be placed at the top level of your code or nested inside any other conditional group at-rule."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10758,
                "percentage_survey": 75.2
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 4104,
                      "percentage_question": 38.2,
                      "percentage_survey": 28.7
                    },
                    {
                      "id": "never_heard",
                      "count": 3390,
                      "percentage_question": 31.6,
                      "percentage_survey": 23.7
                    },
                    {
                      "id": "heard",
                      "count": 3264,
                      "percentage_question": 30.4,
                      "percentage_survey": 22.9
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "will_change",
          "entity": {
            "name": "`will-change`",
            "nameClean": "will-change",
            "nameHtml": "<code>will-change</code>",
            "homepage": null,
            "caniuse": {
              "name": "will-change",
              "url": "https://caniuse.com/will-change"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/will-change",
              "title": "will-change",
              "summary": "The will-change CSS property hints to browsers how an element is expected to change. Browsers may set up optimizations before an element is actually changed. These kinds of optimizations can increase the responsiveness of a page by doing potentially expensive work before they are actually required."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10735,
                "percentage_survey": 75.1
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 5486,
                      "percentage_question": 51.2,
                      "percentage_survey": 38.4
                    },
                    {
                      "id": "used",
                      "count": 3426,
                      "percentage_question": 32,
                      "percentage_survey": 24
                    },
                    {
                      "id": "heard",
                      "count": 1823,
                      "percentage_question": 17,
                      "percentage_survey": 12.8
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "comparison_functions",
          "entity": {
            "name": "CSS Comparison Functions",
            "nameClean": null,
            "nameHtml": null,
            "homepage": null,
            "caniuse": {
              "name": "css-math-functions",
              "url": "https://caniuse.com/css-math-functions"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Functions",
              "title": "CSS Functional Notation",
              "summary": "CSS functional notation is a type of CSS value that can represent more complex data types or invoke special data processing or calculations."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10761,
                "percentage_survey": 75.2
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 6671,
                      "percentage_question": 62,
                      "percentage_survey": 46.7
                    },
                    {
                      "id": "heard",
                      "count": 2298,
                      "percentage_question": 21.4,
                      "percentage_survey": 16.1
                    },
                    {
                      "id": "never_heard",
                      "count": 1792,
                      "percentage_question": 16.7,
                      "percentage_survey": 12.6
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "cascade_layers",
          "entity": {
            "name": "Cascade Layers",
            "nameClean": null,
            "nameHtml": null,
            "homepage": null,
            "caniuse": {
              "name": "css-cascade-layers",
              "url": "https://caniuse.com/css-cascade-layers"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@layer",
              "title": "@layer",
              "summary": "The @layer CSS at-rule is used to declare a cascade layer and can also be used to define the order of precedence in case of multiple cascade layers."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10743,
                "percentage_survey": 75.1
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 6432,
                      "percentage_question": 59.9,
                      "percentage_survey": 45
                    },
                    {
                      "id": "heard",
                      "count": 3702,
                      "percentage_question": 34.5,
                      "percentage_survey": 25.9
                    },
                    {
                      "id": "used",
                      "count": 609,
                      "percentage_question": 5.7,
                      "percentage_survey": 4.3
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "shadow_dom_part",
          "entity": {
            "name": "Shadow DOM `::part()`",
            "nameClean": "Shadow DOM ::part()",
            "nameHtml": "Shadow DOM <code>::part()</code>",
            "homepage": null,
            "caniuse": {
              "name": "mdn-api_element_part",
              "url": "https://caniuse.com/mdn-api_element_part"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/::part",
              "title": "::part()",
              "summary": "The ::part CSS pseudo-element represents any element within a shadow tree that has a matching part attribute."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10131,
                "percentage_survey": 70.8
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 7686,
                      "percentage_question": 75.9,
                      "percentage_survey": 53.8
                    },
                    {
                      "id": "heard",
                      "count": 1647,
                      "percentage_question": 16.3,
                      "percentage_survey": 11.6
                    },
                    {
                      "id": "used",
                      "count": 798,
                      "percentage_question": 7.9,
                      "percentage_survey": 5.6
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "trigonometric_functions",
          "entity": {
            "name": "Trigonometric Functions",
            "nameClean": null,
            "nameHtml": null,
            "homepage": null,
            "caniuse": {
              "name": "css-math-functions",
              "url": "https://caniuse.com/css-math-functions"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Functions",
              "title": "CSS Functional Notation",
              "summary": "CSS functional notation is a type of CSS value that can represent more complex data types or invoke special data processing or calculations."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10759,
                "percentage_survey": 75.2
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "heard",
                      "count": 5194,
                      "percentage_question": 48.3,
                      "percentage_survey": 36.3
                    },
                    {
                      "id": "never_heard",
                      "count": 4997,
                      "percentage_question": 46.5,
                      "percentage_survey": 35
                    },
                    {
                      "id": "used",
                      "count": 568,
                      "percentage_question": 5.3,
                      "percentage_survey": 4
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "css_nesting",
          "entity": {
            "name": "CSS Nesting",
            "nameClean": null,
            "nameHtml": null,
            "homepage": null,
            "caniuse": null,
            "mdn": null
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10760,
                "percentage_survey": 75.2
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "heard",
                      "count": 5161,
                      "percentage_question": 48,
                      "percentage_survey": 36.1
                    },
                    {
                      "id": "never_heard",
                      "count": 4025,
                      "percentage_question": 37.5,
                      "percentage_survey": 28.2
                    },
                    {
                      "id": "used",
                      "count": 1574,
                      "percentage_question": 14.7,
                      "percentage_survey": 11
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "image_set",
          "entity": {
            "name": "`image-set()`",
            "nameClean": "image-set()",
            "nameHtml": "<code>image-set()</code>",
            "homepage": null,
            "caniuse": {
              "name": "css-image-set",
              "url": "https://caniuse.com/css-image-set"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/image/image-set",
              "title": "image-set()",
              "summary": "The image-set() CSS functional notation is a method of letting the browser pick the most appropriate CSS image from a given set, primarily for high pixel density screens."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10746,
                "percentage_survey": 75.1
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 6276,
                      "percentage_question": 58.5,
                      "percentage_survey": 43.9
                    },
                    {
                      "id": "heard",
                      "count": 3111,
                      "percentage_question": 29,
                      "percentage_survey": 21.8
                    },
                    {
                      "id": "used",
                      "count": 1359,
                      "percentage_question": 12.7,
                      "percentage_survey": 9.5
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "image_function",
          "entity": {
            "name": "`image()`",
            "nameClean": "image()",
            "nameHtml": "<code>image()</code>",
            "homepage": null,
            "caniuse": {
              "name": "mdn-css_types_image_image",
              "url": "https://caniuse.com/mdn-css_types_image_image"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/image/image",
              "title": "image()",
              "summary": "The image() CSS function defines an <image> in a similar fashion to the url() function, but with added functionality including specifying the image's directionality, displaying just a part of that image defined by a media fragment, and specifying a solid color as a fallback in case none of the specified images are able to be rendered."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2022,
              "completion": {
                "total": 14310,
                "count": 10756,
                "percentage_survey": 75.2
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 7306,
                      "percentage_question": 68,
                      "percentage_survey": 51.1
                    },
                    {
                      "id": "heard",
                      "count": 1741,
                      "percentage_question": 16.2,
                      "percentage_survey": 12.2
                    },
                    {
                      "id": "used",
                      "count": 1709,
                      "percentage_question": 15.9,
                      "percentage_survey": 12
                    }
                  ]
                }
              ]
            }
          }
        }
      ]
    }
  }
}