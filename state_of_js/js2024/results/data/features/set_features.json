{
  "dataAPI": {
    "surveys": {
      "state_of_js": {
        "js2024": {
          "features": {
            "set_features": {
              "id": "set_features",
              "comments": {
                "currentEdition": {
                  "count": 19
                }
              },
              "responses": {
                "currentEdition": {
                  "_metadata": {
                    "axis1Sort": {
                      "property": "count",
                      "order": "desc"
                    },
                    "limit": 50,
                    "cutoff": 10
                  },
                  "completion": {
                    "count": 9878,
                    "percentageSurvey": 81.39,
                    "total": 12136
                  },
                  "buckets": [
                    {
                      "count": 1557,
                      "id": "set_union",
                      "percentageQuestion": 15.76,
                      "percentageSurvey": 12.83,
                      "entity": {
                        "name": "`set.union()`\n",
                        "nameHtml": "<code>set.union()</code>\n",
                        "nameClean": "set.union()",
                        "description": "Returns a new set containing elements of both this set and the given set.\n",
                        "descriptionClean": "Returns a new set containing elements of both this set and the given set.\n",
                        "id": "set_union",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "const evens = new Set([2, 4, 6, 8]);\nconst squares = new Set([1, 4, 9]);\nconsole.log(evens.union(squares)); // Set(6) { 2, 4, 6, 8, 1, 9 }\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">const</span> evens = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>([<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">8</span>]);\n<span class=\"hljs-keyword\">const</span> squares = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">9</span>]);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(evens.<span class=\"hljs-title function_\">union</span>(squares)); <span class=\"hljs-comment\">// Set(6) { 2, 4, 6, 8, 1, 9 }</span>"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/union"
                        },
                        "webFeature": {
                          "id": "set-methods",
                          "description_html": "The <code>difference()</code>, <code>intersection()</code>, <code>isDisjointFrom()</code>, <code>isSubsetOf()</code>, <code>isSupersetOf()</code>, <code>symmetricDifference()</code>, and <code>union()</code> methods of the JavaScript <code>Set</code> object performs operations between two sets.",
                          "group": [
                            "sets"
                          ],
                          "name": "Set methods",
                          "spec": [
                            "https://tc39.es/proposal-set-methods/"
                          ],
                          "status": {
                            "baseline": "low",
                            "baseline_low_date": "2024-06-11",
                            "support": {
                              "chrome": "122",
                              "chrome_android": "122",
                              "edge": "122",
                              "firefox": "127",
                              "firefox_android": "127",
                              "safari": "17",
                              "safari_ios": "17"
                            }
                          }
                        }
                      }
                    },
                    {
                      "count": 1487,
                      "id": "set_intersection",
                      "percentageQuestion": 15.05,
                      "percentageSurvey": 12.25,
                      "entity": {
                        "name": "`set.intersection()`\n",
                        "nameHtml": "<code>set.intersection()</code>\n",
                        "nameClean": "set.intersection()",
                        "description": "Returns a new set containing elements in both this set and the given set.\n",
                        "descriptionClean": "Returns a new set containing elements in both this set and the given set.\n",
                        "id": "set_intersection",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "const odds = new Set([1, 3, 5, 7, 9]);\nconst squares = new Set([1, 4, 9]);\nconsole.log(odds.intersection(squares)); // Set(2) { 1, 9 }\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">const</span> odds = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">9</span>]);\n<span class=\"hljs-keyword\">const</span> squares = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">9</span>]);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(odds.<span class=\"hljs-title function_\">intersection</span>(squares)); <span class=\"hljs-comment\">// Set(2) { 1, 9 }</span>"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/intersection"
                        },
                        "webFeature": {
                          "id": "set-methods",
                          "description_html": "The <code>difference()</code>, <code>intersection()</code>, <code>isDisjointFrom()</code>, <code>isSubsetOf()</code>, <code>isSupersetOf()</code>, <code>symmetricDifference()</code>, and <code>union()</code> methods of the JavaScript <code>Set</code> object performs operations between two sets.",
                          "group": [
                            "sets"
                          ],
                          "name": "Set methods",
                          "spec": [
                            "https://tc39.es/proposal-set-methods/"
                          ],
                          "status": {
                            "baseline": "low",
                            "baseline_low_date": "2024-06-11",
                            "support": {
                              "chrome": "122",
                              "chrome_android": "122",
                              "edge": "122",
                              "firefox": "127",
                              "firefox_android": "127",
                              "safari": "17",
                              "safari_ios": "17"
                            }
                          }
                        }
                      }
                    },
                    {
                      "count": 1469,
                      "id": "set_difference",
                      "percentageQuestion": 14.87,
                      "percentageSurvey": 12.1,
                      "entity": {
                        "name": "`set.difference()`\n",
                        "nameHtml": "<code>set.difference()</code>\n",
                        "nameClean": "set.difference()",
                        "description": "Returns a new set containing elements in this set but not in the given set.\n",
                        "descriptionClean": "Returns a new set containing elements in this set but not in the given set.\n",
                        "id": "set_difference",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "const odds = new Set([1, 3, 5, 7, 9]);\nconst squares = new Set([1, 4, 9]);\nconsole.log(odds.difference(squares)); // Set(3) { 3, 5, 7 }\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">const</span> odds = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">9</span>]);\n<span class=\"hljs-keyword\">const</span> squares = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">9</span>]);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(odds.<span class=\"hljs-title function_\">difference</span>(squares)); <span class=\"hljs-comment\">// Set(3) { 3, 5, 7 }</span>"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/difference"
                        },
                        "webFeature": {
                          "id": "set-methods",
                          "description_html": "The <code>difference()</code>, <code>intersection()</code>, <code>isDisjointFrom()</code>, <code>isSubsetOf()</code>, <code>isSupersetOf()</code>, <code>symmetricDifference()</code>, and <code>union()</code> methods of the JavaScript <code>Set</code> object performs operations between two sets.",
                          "group": [
                            "sets"
                          ],
                          "name": "Set methods",
                          "spec": [
                            "https://tc39.es/proposal-set-methods/"
                          ],
                          "status": {
                            "baseline": "low",
                            "baseline_low_date": "2024-06-11",
                            "support": {
                              "chrome": "122",
                              "chrome_android": "122",
                              "edge": "122",
                              "firefox": "127",
                              "firefox_android": "127",
                              "safari": "17",
                              "safari_ios": "17"
                            }
                          }
                        }
                      }
                    },
                    {
                      "count": 744,
                      "id": "set_is_subset_of",
                      "percentageQuestion": 7.53,
                      "percentageSurvey": 6.13,
                      "entity": {
                        "name": "`set.isSubsetOf()`\n",
                        "nameHtml": "<code>set.isSubsetOf()</code>\n",
                        "nameClean": "set.isSubsetOf()",
                        "description": "Returns a boolean indicating if all elements of this set are in the given set.\n",
                        "descriptionClean": "Returns a boolean indicating if all elements of this set are in the given set.\n",
                        "id": "set_is_subset_of",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "const fours = new Set([4, 8, 12, 16]);\nconst evens = new Set([2, 4, 6, 8, 10, 12, 14, 16, 18]);\nconsole.log(fours.isSubsetOf(evens)); // true\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">const</span> fours = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>([<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">16</span>]);\n<span class=\"hljs-keyword\">const</span> evens = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>([<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">14</span>, <span class=\"hljs-number\">16</span>, <span class=\"hljs-number\">18</span>]);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(fours.<span class=\"hljs-title function_\">isSubsetOf</span>(evens)); <span class=\"hljs-comment\">// true</span>"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/isSubsetOf"
                        },
                        "webFeature": {
                          "id": "set-methods",
                          "description_html": "The <code>difference()</code>, <code>intersection()</code>, <code>isDisjointFrom()</code>, <code>isSubsetOf()</code>, <code>isSupersetOf()</code>, <code>symmetricDifference()</code>, and <code>union()</code> methods of the JavaScript <code>Set</code> object performs operations between two sets.",
                          "group": [
                            "sets"
                          ],
                          "name": "Set methods",
                          "spec": [
                            "https://tc39.es/proposal-set-methods/"
                          ],
                          "status": {
                            "baseline": "low",
                            "baseline_low_date": "2024-06-11",
                            "support": {
                              "chrome": "122",
                              "chrome_android": "122",
                              "edge": "122",
                              "firefox": "127",
                              "firefox_android": "127",
                              "safari": "17",
                              "safari_ios": "17"
                            }
                          }
                        }
                      }
                    },
                    {
                      "count": 449,
                      "id": "set_is_superset_of",
                      "percentageQuestion": 4.55,
                      "percentageSurvey": 3.7,
                      "entity": {
                        "name": "`set.isSupersetOf()`\n",
                        "nameHtml": "<code>set.isSupersetOf()</code>\n",
                        "nameClean": "set.isSupersetOf()",
                        "description": "Returns a boolean indicating if all elements of the given set are in this set.\n",
                        "descriptionClean": "Returns a boolean indicating if all elements of the given set are in this set.\n",
                        "id": "set_is_superset_of",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "const evens = new Set([2, 4, 6, 8, 10, 12, 14, 16, 18]);\nconst fours = new Set([4, 8, 12, 16]);\nconsole.log(evens.isSupersetOf(fours)); // true\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">const</span> evens = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>([<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">14</span>, <span class=\"hljs-number\">16</span>, <span class=\"hljs-number\">18</span>]);\n<span class=\"hljs-keyword\">const</span> fours = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>([<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">16</span>]);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(evens.<span class=\"hljs-title function_\">isSupersetOf</span>(fours)); <span class=\"hljs-comment\">// true</span>"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/isSupersetOf"
                        },
                        "webFeature": {
                          "id": "set-methods",
                          "description_html": "The <code>difference()</code>, <code>intersection()</code>, <code>isDisjointFrom()</code>, <code>isSubsetOf()</code>, <code>isSupersetOf()</code>, <code>symmetricDifference()</code>, and <code>union()</code> methods of the JavaScript <code>Set</code> object performs operations between two sets.",
                          "group": [
                            "sets"
                          ],
                          "name": "Set methods",
                          "spec": [
                            "https://tc39.es/proposal-set-methods/"
                          ],
                          "status": {
                            "baseline": "low",
                            "baseline_low_date": "2024-06-11",
                            "support": {
                              "chrome": "122",
                              "chrome_android": "122",
                              "edge": "122",
                              "firefox": "127",
                              "firefox_android": "127",
                              "safari": "17",
                              "safari_ios": "17"
                            }
                          }
                        }
                      }
                    },
                    {
                      "count": 320,
                      "id": "set_symmetric_difference",
                      "percentageQuestion": 3.24,
                      "percentageSurvey": 2.64,
                      "entity": {
                        "name": "`set.symmetricDifference()`\n",
                        "nameHtml": "<code>set.symmetricDifference()</code>\n",
                        "nameClean": "set.symmetricDifference()",
                        "description": "Returns a new set containing elements which are in either this set or the given set, but not in both.\n",
                        "descriptionClean": "Returns a new set containing elements which are in either this set or the given set, but not in both.\n",
                        "id": "set_symmetric_difference",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "const evens = new Set([2, 4, 6, 8]);\nconst squares = new Set([1, 4, 9]);\nconsole.log(evens.symmetricDifference(squares)); // Set(5) { 2, 6, 8, 1, 9 }\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">const</span> evens = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>([<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">8</span>]);\n<span class=\"hljs-keyword\">const</span> squares = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">9</span>]);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(evens.<span class=\"hljs-title function_\">symmetricDifference</span>(squares)); <span class=\"hljs-comment\">// Set(5) { 2, 6, 8, 1, 9 }</span>"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/symmetricDifference"
                        },
                        "webFeature": {
                          "id": "set-methods",
                          "description_html": "The <code>difference()</code>, <code>intersection()</code>, <code>isDisjointFrom()</code>, <code>isSubsetOf()</code>, <code>isSupersetOf()</code>, <code>symmetricDifference()</code>, and <code>union()</code> methods of the JavaScript <code>Set</code> object performs operations between two sets.",
                          "group": [
                            "sets"
                          ],
                          "name": "Set methods",
                          "spec": [
                            "https://tc39.es/proposal-set-methods/"
                          ],
                          "status": {
                            "baseline": "low",
                            "baseline_low_date": "2024-06-11",
                            "support": {
                              "chrome": "122",
                              "chrome_android": "122",
                              "edge": "122",
                              "firefox": "127",
                              "firefox_android": "127",
                              "safari": "17",
                              "safari_ios": "17"
                            }
                          }
                        }
                      }
                    },
                    {
                      "count": 252,
                      "id": "set_is_disjoint_from",
                      "percentageQuestion": 2.55,
                      "percentageSurvey": 2.08,
                      "entity": {
                        "name": "`set.isDisjointFrom()`\n",
                        "nameHtml": "<code>set.isDisjointFrom()</code>\n",
                        "nameClean": "set.isDisjointFrom()",
                        "description": "Returns a boolean indicating if this set has no elements in common with the given set.\n",
                        "descriptionClean": "Returns a boolean indicating if this set has no elements in common with the given set.\n",
                        "id": "set_is_disjoint_from",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "const primes = new Set([2, 3, 5, 7, 11, 13, 17, 19]);\nconst squares = new Set([1, 4, 9, 16]);\nconsole.log(primes.isDisjointFrom(squares)); // true\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">const</span> primes = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>([<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">17</span>, <span class=\"hljs-number\">19</span>]);\n<span class=\"hljs-keyword\">const</span> squares = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">16</span>]);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(primes.<span class=\"hljs-title function_\">isDisjointFrom</span>(squares)); <span class=\"hljs-comment\">// true</span>"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/isDisjointFrom"
                        },
                        "webFeature": {
                          "id": "set-methods",
                          "description_html": "The <code>difference()</code>, <code>intersection()</code>, <code>isDisjointFrom()</code>, <code>isSubsetOf()</code>, <code>isSupersetOf()</code>, <code>symmetricDifference()</code>, and <code>union()</code> methods of the JavaScript <code>Set</code> object performs operations between two sets.",
                          "group": [
                            "sets"
                          ],
                          "name": "Set methods",
                          "spec": [
                            "https://tc39.es/proposal-set-methods/"
                          ],
                          "status": {
                            "baseline": "low",
                            "baseline_low_date": "2024-06-11",
                            "support": {
                              "chrome": "122",
                              "chrome_android": "122",
                              "edge": "122",
                              "firefox": "127",
                              "firefox_android": "127",
                              "safari": "17",
                              "safari_ios": "17"
                            }
                          }
                        }
                      }
                    },
                    {
                      "count": 7489,
                      "id": "na",
                      "percentageQuestion": 75.81,
                      "percentageSurvey": 61.71
                    },
                    {
                      "count": 2258,
                      "id": "no_answer",
                      "percentageQuestion": 0,
                      "percentageSurvey": 18.61
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}