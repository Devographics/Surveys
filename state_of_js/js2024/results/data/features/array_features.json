{
  "dataAPI": {
    "surveys": {
      "state_of_js": {
        "js2024": {
          "features": {
            "array_features": {
              "id": "array_features",
              "comments": {
                "currentEdition": {
                  "count": 19
                }
              },
              "responses": {
                "currentEdition": {
                  "_metadata": {
                    "axis1Sort": {
                      "property": "count",
                      "order": "desc"
                    },
                    "limit": 50,
                    "cutoff": 10
                  },
                  "completion": {
                    "count": 11896,
                    "percentageSurvey": 88.76,
                    "total": 13403
                  },
                  "buckets": [
                    {
                      "count": 4746,
                      "id": "array_to_sorted",
                      "percentageQuestion": 39.9,
                      "percentageSurvey": 35.41,
                      "entity": {
                        "name": "`array.toSorted()`\n",
                        "nameHtml": "<code>array.toSorted()</code>\n",
                        "nameClean": "array.toSorted()",
                        "description": "Sort without mutating the original array.\n",
                        "descriptionClean": "Sort without mutating the original array.\n",
                        "id": "array_to_sorted",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "const values = [1, 10, 21, 2];\nconst sortedValues = values.toSorted((a, b) => a - b);\nconsole.log(sortedValues); // [1, 2, 10, 21]\nconsole.log(values); // [1, 10, 21, 2]\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">const</span> values = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">21</span>, <span class=\"hljs-number\">2</span>];\n<span class=\"hljs-keyword\">const</span> sortedValues = values.<span class=\"hljs-title function_\">toSorted</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =&gt;</span> a - b);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(sortedValues); <span class=\"hljs-comment\">// [1, 2, 10, 21]</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(values); <span class=\"hljs-comment\">// [1, 10, 21, 2]</span>"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toSorted"
                        },
                        "webFeature": {
                          "id": "array-by-copy",
                          "description_html": "The <code>toReversed()</code>, <code>toSorted()</code>, <code>toSpliced()</code>, and <code>with()</code> methods of arrays and typed arrays return changed copies of arrays. They stand in contrast to methods such as <code>sort()</code> or <code>reverse()</code> that change arrays in place.",
                          "group": [
                            "arrays",
                            "typed-arrays"
                          ],
                          "name": "Array by copy",
                          "spec": [
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.toreversed",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.tosorted",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.tospliced",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.with",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-%25typedarray%25.prototype.toreversed",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-%25typedarray%25.prototype.tosorted",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-%25typedarray%25.prototype.with"
                          ],
                          "status": {
                            "baseline": "low",
                            "baseline_low_date": "2023-07-04",
                            "support": {
                              "chrome": "110",
                              "chrome_android": "110",
                              "edge": "110",
                              "firefox": "115",
                              "firefox_android": "115",
                              "safari": "16",
                              "safari_ios": "16"
                            }
                          }
                        }
                      }
                    },
                    {
                      "count": 3810,
                      "id": "array_findlast",
                      "percentageQuestion": 32.03,
                      "percentageSurvey": 28.43,
                      "entity": {
                        "name": "`array.findLast()`",
                        "nameHtml": "<code>array.findLast()</code>",
                        "nameClean": "array.findLast()",
                        "description": "Returns the value of the last element that satisfies the testing function.\n",
                        "descriptionClean": "Returns the value of the last element that satisfies the testing function.\n",
                        "id": "array_findlast",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "const array1 = [5, 12, 50, 130, 44];\nconst found = array1.findLast((element) => element > 45);\nconsole.log(found);\n// expected output: 130\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">const</span> array1 = [<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">130</span>, <span class=\"hljs-number\">44</span>];\n<span class=\"hljs-keyword\">const</span> found = array1.<span class=\"hljs-title function_\">findLast</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">element</span>) =&gt;</span> element &gt; <span class=\"hljs-number\">45</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(found);\n<span class=\"hljs-comment\">// expected output: 130</span>"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLast"
                        }
                      }
                    },
                    {
                      "count": 3789,
                      "id": "array_to_reversed",
                      "percentageQuestion": 31.85,
                      "percentageSurvey": 28.27,
                      "entity": {
                        "name": "`array.toReversed()`\n",
                        "nameHtml": "<code>array.toReversed()</code>\n",
                        "nameClean": "array.toReversed()",
                        "description": "Reverse without mutating the original array.\n",
                        "descriptionClean": "Reverse without mutating the original array.\n",
                        "id": "array_to_reversed",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "const items = [1, 2, 3];\nconst reversedItems = items.toReversed();\nconsole.log(reversedItems); // [3, 2, 1]\nconsole.log(items); // [1, 2, 3]\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">const</span> items = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>];\n<span class=\"hljs-keyword\">const</span> reversedItems = items.<span class=\"hljs-title function_\">toReversed</span>();\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(reversedItems); <span class=\"hljs-comment\">// [3, 2, 1]</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(items); <span class=\"hljs-comment\">// [1, 2, 3]</span>"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toReversed"
                        },
                        "webFeature": {
                          "id": "array-by-copy",
                          "description_html": "The <code>toReversed()</code>, <code>toSorted()</code>, <code>toSpliced()</code>, and <code>with()</code> methods of arrays and typed arrays return changed copies of arrays. They stand in contrast to methods such as <code>sort()</code> or <code>reverse()</code> that change arrays in place.",
                          "group": [
                            "arrays",
                            "typed-arrays"
                          ],
                          "name": "Array by copy",
                          "spec": [
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.toreversed",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.tosorted",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.tospliced",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.with",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-%25typedarray%25.prototype.toreversed",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-%25typedarray%25.prototype.tosorted",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-%25typedarray%25.prototype.with"
                          ],
                          "status": {
                            "baseline": "low",
                            "baseline_low_date": "2023-07-04",
                            "support": {
                              "chrome": "110",
                              "chrome_android": "110",
                              "edge": "110",
                              "firefox": "115",
                              "firefox_android": "115",
                              "safari": "16",
                              "safari_ios": "16"
                            }
                          }
                        }
                      }
                    },
                    {
                      "count": 2280,
                      "id": "array_to_spliced",
                      "percentageQuestion": 19.17,
                      "percentageSurvey": 17.01,
                      "entity": {
                        "name": "`array.toSpliced()`\n",
                        "nameHtml": "<code>array.toSpliced()</code>\n",
                        "nameClean": "array.toSpliced()",
                        "description": "Splice without mutating the original array.\n",
                        "descriptionClean": "Splice without mutating the original array.\n",
                        "id": "array_to_spliced",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "const months = [\"Jan\", \"Mar\", \"Apr\", \"May\"];\n\n// Inserting an element at index 1\nconst months2 = months.toSpliced(1, 0, \"Feb\");\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">const</span> months = [<span class=\"hljs-string\">&quot;Jan&quot;</span>, <span class=\"hljs-string\">&quot;Mar&quot;</span>, <span class=\"hljs-string\">&quot;Apr&quot;</span>, <span class=\"hljs-string\">&quot;May&quot;</span>];\n\n<span class=\"hljs-comment\">// Inserting an element at index 1</span>\n<span class=\"hljs-keyword\">const</span> months2 = months.<span class=\"hljs-title function_\">toSpliced</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">&quot;Feb&quot;</span>);"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toSpliced"
                        },
                        "webFeature": {
                          "id": "array-by-copy",
                          "description_html": "The <code>toReversed()</code>, <code>toSorted()</code>, <code>toSpliced()</code>, and <code>with()</code> methods of arrays and typed arrays return changed copies of arrays. They stand in contrast to methods such as <code>sort()</code> or <code>reverse()</code> that change arrays in place.",
                          "group": [
                            "arrays",
                            "typed-arrays"
                          ],
                          "name": "Array by copy",
                          "spec": [
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.toreversed",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.tosorted",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.tospliced",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.with",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-%25typedarray%25.prototype.toreversed",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-%25typedarray%25.prototype.tosorted",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-%25typedarray%25.prototype.with"
                          ],
                          "status": {
                            "baseline": "low",
                            "baseline_low_date": "2023-07-04",
                            "support": {
                              "chrome": "110",
                              "chrome_android": "110",
                              "edge": "110",
                              "firefox": "115",
                              "firefox_android": "115",
                              "safari": "16",
                              "safari_ios": "16"
                            }
                          }
                        }
                      }
                    },
                    {
                      "count": 1596,
                      "id": "array_with",
                      "percentageQuestion": 13.42,
                      "percentageSurvey": 11.91,
                      "entity": {
                        "name": "`array.with()`\n",
                        "nameHtml": "<code>array.with()</code>\n",
                        "nameClean": "array.with()",
                        "description": "Returns a new array with the element at the given index replaced with the given value.\n",
                        "descriptionClean": "Returns a new array with the element at the given index replaced with the given value.\n",
                        "id": "array_with",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "const arr = [1, 2, 3, 4, 5];\nconsole.log(arr.with(2, 6)); // [1, 2, 6, 4, 5]\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">const</span> arr = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>];\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(arr.<span class=\"hljs-title function_\">with</span>(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">6</span>)); <span class=\"hljs-comment\">// [1, 2, 6, 4, 5]</span>"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/with"
                        },
                        "webFeature": {
                          "id": "array-by-copy",
                          "description_html": "The <code>toReversed()</code>, <code>toSorted()</code>, <code>toSpliced()</code>, and <code>with()</code> methods of arrays and typed arrays return changed copies of arrays. They stand in contrast to methods such as <code>sort()</code> or <code>reverse()</code> that change arrays in place.",
                          "group": [
                            "arrays",
                            "typed-arrays"
                          ],
                          "name": "Array by copy",
                          "spec": [
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.toreversed",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.tosorted",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.tospliced",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.with",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-%25typedarray%25.prototype.toreversed",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-%25typedarray%25.prototype.tosorted",
                            "https://tc39.es/ecma262/multipage/indexed-collections.html#sec-%25typedarray%25.prototype.with"
                          ],
                          "status": {
                            "baseline": "low",
                            "baseline_low_date": "2023-07-04",
                            "support": {
                              "chrome": "110",
                              "chrome_android": "110",
                              "edge": "110",
                              "firefox": "115",
                              "firefox_android": "115",
                              "safari": "16",
                              "safari_ios": "16"
                            }
                          }
                        }
                      }
                    },
                    {
                      "count": 574,
                      "id": "array_from_async",
                      "percentageQuestion": 4.83,
                      "percentageSurvey": 4.28,
                      "entity": {
                        "name": "`array.fromAsync()`\n",
                        "nameHtml": "<code>array.fromAsync()</code>\n",
                        "nameClean": "array.fromAsync()",
                        "description": "Similar to Array.from but for async iterators.",
                        "descriptionClean": "Similar to Array.from but for async iterators.",
                        "id": "array_from_async",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "const asyncIterable = (async function* () {\n  for (let i = 0; i < 5; i++) {\n    await new Promise((resolve) => setTimeout(resolve, 10 * i));\n    yield i;\n  }\n})();\n\nArray.fromAsync(asyncIterable).then((array) => console.log(array));\n// [0, 1, 2, 3, 4]\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">const</span> asyncIterable = (<span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">function</span>* () {\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">5</span>; i++) {\n    <span class=\"hljs-keyword\">await</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve</span>) =&gt;</span> <span class=\"hljs-built_in\">setTimeout</span>(resolve, <span class=\"hljs-number\">10</span> * i));\n    <span class=\"hljs-keyword\">yield</span> i;\n  }\n})();\n\n<span class=\"hljs-title class_\">Array</span>.<span class=\"hljs-title function_\">fromAsync</span>(asyncIterable).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">array</span>) =&gt;</span> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(array));\n<span class=\"hljs-comment\">// [0, 1, 2, 3, 4]</span>"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fromAsync"
                        },
                        "webFeature": {
                          "id": "array-fromasync",
                          "description_html": "The <code>Array.fromAsync()</code> static method copies items from an async iterable object to make a new array.",
                          "group": [
                            "arrays"
                          ],
                          "name": "Array.fromAsync()",
                          "spec": [
                            "https://tc39.es/proposal-array-from-async/#sec-array.fromAsync"
                          ],
                          "status": {
                            "baseline": "low",
                            "baseline_low_date": "2024-01-25",
                            "support": {
                              "chrome": "121",
                              "chrome_android": "121",
                              "edge": "121",
                              "firefox": "115",
                              "firefox_android": "115",
                              "safari": "16.4",
                              "safari_ios": "16.4"
                            }
                          }
                        }
                      }
                    },
                    {
                      "count": 4590,
                      "id": "na",
                      "percentageQuestion": 38.58,
                      "percentageSurvey": 34.25
                    },
                    {
                      "count": 1507,
                      "id": "no_answer",
                      "percentageQuestion": 0,
                      "percentageSurvey": 11.24
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}