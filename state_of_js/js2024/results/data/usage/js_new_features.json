{
  "dataAPI": {
    "surveys": {
      "state_of_js": {
        "js2024": {
          "usage": {
            "js_new_features": {
              "id": "js_new_features",
              "comments": {
                "currentEdition": {
                  "count": 13
                }
              },
              "combined": {
                "currentEdition": {
                  "_metadata": {
                    "axis1Sort": {
                      "property": "count",
                      "order": "desc"
                    },
                    "limit": 20,
                    "cutoff": 10
                  },
                  "completion": {
                    "count": 7818,
                    "percentageSurvey": 64.42,
                    "total": 12136
                  },
                  "buckets": [
                    {
                      "count": 5831,
                      "id": "temporal",
                      "percentageQuestion": 74.58,
                      "percentageSurvey": 48.05,
                      "entity": {
                        "name": "Temporal",
                        "nameClean": "Temporal",
                        "description": "Provides standard objects and functions for working with dates and times.",
                        "descriptionClean": "Provides standard objects and functions for working with dates and times.",
                        "id": "temporal",
                        "entityType": "feature",
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date"
                        }
                      }
                    },
                    {
                      "count": 2960,
                      "id": "js_decorators",
                      "percentageQuestion": 37.86,
                      "percentageSurvey": 24.39,
                      "entity": {
                        "name": "Decorators",
                        "nameClean": "Decorators",
                        "description": "Functions called on classes or other JavaScript syntax forms during definition.",
                        "descriptionClean": "Functions called on classes or other JavaScript syntax forms during definition.",
                        "id": "js_decorators",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "@defineElement(\"my-class\")\nclass C extends HTMLElement {\n  @reactive accessor clicked = false;\n}\n",
                          "codeHighlighted": "@<span class=\"hljs-title function_\">defineElement</span>(<span class=\"hljs-string\">&quot;my-class&quot;</span>)\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">C</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">HTMLElement</span> {\n  @reactive accessor clicked = <span class=\"hljs-literal\">false</span>;\n}"
                        },
                        "resources": [
                          {
                            "url": "https://github.com/tc39/proposal-decorators",
                            "title": "Decorators Proposal"
                          }
                        ]
                      }
                    },
                    {
                      "count": 1154,
                      "id": "js_explicit_resource_management",
                      "percentageQuestion": 14.76,
                      "percentageSurvey": 9.51,
                      "entity": {
                        "name": "Explicit Resource Management",
                        "nameClean": "Explicit Resource Management",
                        "description": "Allocation of a resource and the ability to explicitly release critical resources.",
                        "descriptionClean": "Allocation of a resource and the ability to explicitly release critical resources.",
                        "id": "js_explicit_resource_management",
                        "entityType": "feature",
                        "resources": [
                          {
                            "url": "https://github.com/tc39/proposal-explicit-resource-management",
                            "title": "ECMAScript Explicit Resource Management Proposal"
                          }
                        ]
                      }
                    },
                    {
                      "count": 1075,
                      "id": "js_deferring_module_evaluation",
                      "percentageQuestion": 13.75,
                      "percentageSurvey": 8.86,
                      "entity": {
                        "name": "Deferring Module Evaluation",
                        "nameClean": "Deferring Module Evaluation",
                        "description": "Modules that would not be executed when loaded, but would be fully loaded to the point of being execution-ready.",
                        "descriptionClean": "Modules that would not be executed when loaded, but would be fully loaded to the point of being execution-ready.",
                        "id": "js_deferring_module_evaluation",
                        "entityType": "feature",
                        "resources": [
                          {
                            "url": "https://github.com/tc39/proposal-defer-import-eval",
                            "title": "Deferring Module Evaluation Proposal"
                          }
                        ]
                      }
                    },
                    {
                      "count": 850,
                      "id": "js_json_parse_source_access",
                      "percentageQuestion": 10.87,
                      "percentageSurvey": 7,
                      "entity": {
                        "name": "JSON.parse source text access",
                        "nameClean": "JSON.parse source text access",
                        "description": "Grant reviver functions access to the input source text.",
                        "descriptionClean": "Grant reviver functions access to the input source text.",
                        "id": "js_json_parse_source_access",
                        "entityType": "feature",
                        "resources": [
                          {
                            "url": "https://github.com/tc39/proposal-json-parse-with-source",
                            "title": "JSON.parse source text access Proposal"
                          }
                        ]
                      }
                    },
                    {
                      "count": 775,
                      "id": "js_decorator_metadata",
                      "percentageQuestion": 9.91,
                      "percentageSurvey": 6.39,
                      "entity": {
                        "name": "Decorator Metadata",
                        "nameClean": "Decorator Metadata",
                        "description": "Extend the Decorators proposal by adding the ability for decorators to associate metadata with the value being decorated.",
                        "descriptionClean": "Extend the Decorators proposal by adding the ability for decorators to associate metadata with the value being decorated.",
                        "id": "js_decorator_metadata",
                        "entityType": "feature",
                        "resources": [
                          {
                            "url": "https://github.com/tc39/proposal-decorator-metadata",
                            "title": "Decorator Metadata Proposal"
                          }
                        ]
                      }
                    },
                    {
                      "count": 657,
                      "id": "regexp_escape",
                      "percentageQuestion": 8.4,
                      "percentageSurvey": 5.41,
                      "entity": {
                        "name": "`RegExp.escape`\n",
                        "nameHtml": "<code>RegExp.escape</code>\n",
                        "nameClean": "RegExp.escape",
                        "description": "Escaping a string for use inside a Regular Expression.",
                        "descriptionClean": "Escaping a string for use inside a Regular Expression.",
                        "id": "regexp_escape",
                        "entityType": "feature",
                        "resources": [
                          {
                            "url": "https://github.com/tc39/proposal-regex-escaping",
                            "title": "RegExp Escaping Proposal"
                          }
                        ]
                      }
                    },
                    {
                      "count": 604,
                      "id": "js_shadow_realm",
                      "percentageQuestion": 7.73,
                      "percentageSurvey": 4.98,
                      "entity": {
                        "name": "ShadowRealm API",
                        "nameClean": "ShadowRealm API",
                        "description": "A distinct global environment, with its own global object containing its own intrinsics and built-ins.",
                        "descriptionClean": "A distinct global environment, with its own global object containing its own intrinsics and built-ins.",
                        "id": "js_shadow_realm",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "declare class ShadowRealm {\n  constructor();\n  importValue(specifier: string, bindingName: string): Promise<PrimitiveValueOrCallable>;\n  evaluate(sourceText: string): PrimitiveValueOrCallable;\n}\n",
                          "codeHighlighted": "declare <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ShadowRealm</span> {\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"></span>);\n  importValue(<span class=\"hljs-attr\">specifier</span>: string, <span class=\"hljs-attr\">bindingName</span>: string): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">PrimitiveValueOrCallable</span>&gt;;\n  evaluate(<span class=\"hljs-attr\">sourceText</span>: string): <span class=\"hljs-title class_\">PrimitiveValueOrCallable</span>;\n}"
                        },
                        "resources": [
                          {
                            "url": "https://github.com/tc39/proposal-shadowrealm",
                            "title": "ShadowRealm Proposal"
                          }
                        ]
                      }
                    },
                    {
                      "count": 581,
                      "id": "js_source_phase_imports",
                      "percentageQuestion": 7.43,
                      "percentageSurvey": 4.79,
                      "entity": {
                        "name": "Source Phase Imports",
                        "nameClean": "Source Phase Imports",
                        "description": "Customize the loading, linking, and execution of modules beyond the standard host execution model.",
                        "descriptionClean": "Customize the loading, linking, and execution of modules beyond the standard host execution model.",
                        "id": "js_source_phase_imports",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "import source x from \"<specifier>\";\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">import</span> source x <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;&lt;specifier&gt;&quot;</span>;"
                        },
                        "resources": [
                          {
                            "url": "https://github.com/tc39/proposal-source-phase-imports",
                            "title": "Source Phase Imports Proposal"
                          }
                        ]
                      }
                    },
                    {
                      "count": 401,
                      "id": "js_joint_iteration",
                      "percentageQuestion": 5.13,
                      "percentageSurvey": 3.3,
                      "entity": {
                        "name": "Joint Iteration",
                        "nameClean": "Joint Iteration",
                        "description": "Synchronise the advancement of multiple iterators.",
                        "descriptionClean": "Synchronise the advancement of multiple iterators.",
                        "id": "js_joint_iteration",
                        "entityType": "feature",
                        "resources": [
                          {
                            "url": "https://github.com/tc39/proposal-joint-iteration",
                            "title": "Joint Iteration Proposal"
                          }
                        ]
                      }
                    },
                    {
                      "count": 372,
                      "id": "js_iterator_sequencing",
                      "percentageQuestion": 4.76,
                      "percentageSurvey": 3.07,
                      "entity": {
                        "name": "Iterator Sequencing",
                        "nameClean": "Iterator Sequencing",
                        "description": "Create iterators by sequencing existing iterators.",
                        "descriptionClean": "Create iterators by sequencing existing iterators.",
                        "id": "js_iterator_sequencing",
                        "entityType": "feature",
                        "resources": [
                          {
                            "url": "https://github.com/tc39/proposal-iterator-sequencing",
                            "title": "Iterator Sequencing Proposal"
                          }
                        ]
                      }
                    },
                    {
                      "count": 303,
                      "id": "js_float16_arrays",
                      "percentageQuestion": 3.88,
                      "percentageSurvey": 2.5,
                      "entity": {
                        "name": "Float16Array",
                        "nameClean": "Float16Array",
                        "description": "Add float16 (aka half-precision or binary16) TypedArrays to JavaScript.",
                        "descriptionClean": "Add float16 (aka half-precision or binary16) TypedArrays to JavaScript.",
                        "id": "js_float16_arrays",
                        "entityType": "feature",
                        "resources": [
                          {
                            "url": "https://github.com/tc39/proposal-float16array",
                            "title": "Float16Array Proposal"
                          }
                        ]
                      }
                    },
                    {
                      "count": 41,
                      "id": "js_record_tuple",
                      "percentageQuestion": 0.52,
                      "percentageSurvey": 0.34,
                      "isFreeformData": true,
                      "entity": {
                        "name": "`Record` & `Tuple`\n",
                        "nameHtml": "<code>Record</code> &amp; <code>Tuple</code>\n",
                        "nameClean": "Record  Tuple",
                        "description": "Two deeply immutable data structures.",
                        "descriptionClean": "Two deeply immutable data structures.",
                        "id": "js_record_tuple",
                        "entityType": "feature",
                        "resources": [
                          {
                            "url": "https://github.com/tc39/proposal-record-tuple",
                            "title": "Records & Tuples Proposal"
                          }
                        ]
                      }
                    },
                    {
                      "count": 19,
                      "id": "js_observable",
                      "percentageQuestion": 0.24,
                      "percentageSurvey": 0.16,
                      "isFreeformData": true,
                      "entity": {
                        "name": "`Observable`\n",
                        "nameHtml": "<code>Observable</code>\n",
                        "nameClean": "Observable",
                        "description": "A type that can be used to model push-based data sources such as DOM events, timer intervals, and sockets.",
                        "descriptionClean": "A type that can be used to model push-based data sources such as DOM events, timer intervals, and sockets.",
                        "id": "js_observable",
                        "entityType": "feature",
                        "resources": [
                          {
                            "url": "https://github.com/tc39/proposal-observable",
                            "title": "Observable Proposal"
                          }
                        ]
                      }
                    },
                    {
                      "count": 4318,
                      "id": "no_answer",
                      "percentageQuestion": 0,
                      "percentageSurvey": 35.58
                    },
                    {
                      "count": 328,
                      "id": "other_answers",
                      "percentageQuestion": 4.19,
                      "percentageSurvey": 2.72,
                      "groupedBuckets": [
                        {
                          "count": 7,
                          "id": "cutoff_answers",
                          "percentageQuestion": 0.08,
                          "percentageSurvey": 0.07
                        },
                        {
                          "count": 321,
                          "id": "no_match",
                          "percentageQuestion": 4.11,
                          "percentageSurvey": 2.65,
                          "isFreeformData": true
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}