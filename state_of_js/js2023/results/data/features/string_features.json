{
  "dataAPI": {
    "surveys": {
      "state_of_js": {
        "js2023": {
          "features": {
            "string_features": {
              "responses": {
                "currentEdition": {
                  "completion": {
                    "count": 16796,
                    "percentageSurvey": 93.86,
                    "total": 17894
                  },
                  "buckets": [
                    {
                      "count": 16056,
                      "id": "string_replace_all",
                      "percentageQuestion": 95.59,
                      "percentageSurvey": 89.73,
                      "entity": {
                        "name": "`string.replaceAll()`",
                        "nameHtml": "<code>string.replaceAll()</code>",
                        "nameClean": "string.replaceAll()",
                        "id": "string_replace_all",
                        "type": "feature",
                        "example": {
                          "language": "js",
                          "code": "const s1 = \"foo_bar_baz\";\nconst s2 = s1.replaceAll('_', '-');\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">const</span> s1 = <span class=\"hljs-string\">&quot;foo_bar_baz&quot;</span>;\n<span class=\"hljs-keyword\">const</span> s2 = s1.<span class=\"hljs-title function_\">replaceAll</span>(<span class=\"hljs-string\">&#x27;_&#x27;</span>, <span class=\"hljs-string\">&#x27;-&#x27;</span>);"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll"
                        },
                        "caniuse": {
                          "url": "https://caniuse.com/mdn-javascript_builtins_string_replaceall"
                        }
                      }
                    },
                    {
                      "count": 9221,
                      "id": "string_match_all",
                      "percentageQuestion": 54.9,
                      "percentageSurvey": 51.53,
                      "entity": {
                        "name": "`string.matchAll()`",
                        "nameHtml": "<code>string.matchAll()</code>",
                        "nameClean": "string.matchAll()",
                        "id": "string_match_all",
                        "type": "feature",
                        "example": {
                          "language": "js",
                          "code": "const regexp = /t(e)(st(\\d?))/g;\nconst str = 'test1test2';\nconst array = [...str.matchAll(regexp)];\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">const</span> regexp = <span class=\"hljs-regexp\">/t(e)(st(\\d?))/g</span>;\n<span class=\"hljs-keyword\">const</span> str = <span class=\"hljs-string\">&#x27;test1test2&#x27;</span>;\n<span class=\"hljs-keyword\">const</span> array = [...str.<span class=\"hljs-title function_\">matchAll</span>(regexp)];"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/matchAll"
                        },
                        "caniuse": {
                          "url": "https://caniuse.com/mdn-javascript_builtins_string_matchall"
                        }
                      }
                    },
                    {
                      "count": 5038,
                      "id": "regexp_match_indices",
                      "percentageQuestion": 30,
                      "percentageSurvey": 28.15,
                      "entity": {
                        "name": "Regexp Match Indices",
                        "nameClean": "Regexp Match Indices",
                        "id": "regexp_match_indices",
                        "type": "feature",
                        "example": {
                          "language": "js",
                          "code": "const str1 = \"foo bar foo\";\nconst regex1 = /foo/dg;\nconsole.log(regex1.exec(str1).indices[0]); // Output: Array [0, 2]\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">const</span> str1 = <span class=\"hljs-string\">&quot;foo bar foo&quot;</span>;\n<span class=\"hljs-keyword\">const</span> regex1 = <span class=\"hljs-regexp\">/foo/</span>dg;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(regex1.<span class=\"hljs-title function_\">exec</span>(str1).<span class=\"hljs-property\">indices</span>[<span class=\"hljs-number\">0</span>]); <span class=\"hljs-comment\">// Output: Array [0, 2]</span>"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/hasIndices"
                        }
                      }
                    },
                    {
                      "count": 3102,
                      "id": "na",
                      "percentageQuestion": 18.47,
                      "percentageSurvey": 17.34,
                      "entity": {
                        "type": "default"
                      }
                    },
                    {
                      "count": 1032,
                      "id": "other_answers",
                      "percentageQuestion": 0,
                      "percentageSurvey": 5.77
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}