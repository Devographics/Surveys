{
  "dataAPI": {
    "surveys": {
      "state_of_html": {
        "html2024": {
          "reading_list": {
            "reading_list": {
              "id": "reading_list",
              "responses": {
                "currentEdition": {
                  "_metadata": {
                    "axis1Sort": {
                      "property": "count",
                      "order": "desc"
                    }
                  },
                  "completion": {
                    "count": 1898,
                    "percentageSurvey": 35.14,
                    "total": 5402
                  },
                  "buckets": [
                    {
                      "count": 907,
                      "id": "customizable_select",
                      "percentageQuestion": 47.79,
                      "percentageSurvey": 16.79,
                      "entity": {
                        "name": "Customizable Select",
                        "nameClean": "Customizable Select",
                        "description": "Stylable, customizable dropdown control. Previously `<selectlist>` and `<selectmenu>`.\n",
                        "descriptionHtml": "Stylable, customizable dropdown control. Previously <code>&lt;selectlist&gt;</code> and <code>&lt;selectmenu&gt;</code>.\n",
                        "descriptionClean": "Stylable, customizable dropdown control. Previously selectlist and selectmenu.",
                        "id": "customizable_select",
                        "entityType": "feature",
                        "example": {
                          "language": "css",
                          "code": "select,\n::picker(select) {\n  appearance: base-select;\n}",
                          "codeHighlighted": "select,\n::<span class=\"hljs-built_in\">picker</span>(select) {\n  appearance: base-select;\n}"
                        },
                        "resources": [
                          {
                            "url": "https://open-ui.org/components/customizableselect/",
                            "title": "Customizable Select Element (Explainer)"
                          },
                          {
                            "url": "https://web.dev/state-of-css-2022/#customizing-select-elements",
                            "title": "State of CSS 2022"
                          },
                          {
                            "url": "https://css-tricks.com/the-selectmenu-element/",
                            "title": "The selectmenu HTML Tag | CSS-Tricks - CSS-Tricks"
                          },
                          {
                            "url": "https://www.smashingmagazine.com/2023/06/advanced-form-control-styling-selectmenu-anchoring-api/",
                            "title": "Advanced Form Control Styling With Selectmenu And Anchoring API — Smashing Magazine"
                          },
                          {
                            "url": "https://hidde.blog/custom-select-with-selectmenu/",
                            "title": "Two levels of customising <selectlist>\n"
                          },
                          {
                            "url": "https://microsoftedge.github.io/Demos/selectmenu/",
                            "title": "Open UI's selectmenu demos"
                          }
                        ]
                      }
                    },
                    {
                      "count": 830,
                      "id": "focusgroup_attribute",
                      "percentageQuestion": 43.73,
                      "percentageSurvey": 15.36,
                      "entity": {
                        "name": "`focusgroup` attribute",
                        "nameHtml": "<code>focusgroup</code> attribute",
                        "nameClean": "focusgroup attribute",
                        "description": "Facilitate keyboard focus navigation using the keyboard arrow keys among a set of focusable elements.",
                        "descriptionClean": "Facilitate keyboard focus navigation using the keyboard arrow keys among a set of focusable elements.",
                        "id": "focusgroup_attribute",
                        "entityType": "feature",
                        "example": {
                          "language": "html",
                          "code": "<div focusgroup=\"wrap horizontal\">\n\t<!-- child elements -->\n</div>",
                          "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">focusgroup</span>=<span class=\"hljs-string\">&quot;wrap horizontal&quot;</span>&gt;</span>\n\t<span class=\"hljs-comment\">&lt;!-- child elements --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>"
                        },
                        "resources": [
                          {
                            "url": "https://open-ui.org/components/focusgroup.explainer/",
                            "title": "focusgroup (Explainer) | Open UI"
                          },
                          {
                            "url": "https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/Focusgroup/explainer.md?rgh-link-date=2022-02-20T23%3A49%3A02Z",
                            "title": "focusgroup for HTML and CSS"
                          },
                          {
                            "url": "https://chromestatus.com/feature/5637601087193088",
                            "title": "Chrome Platform Status"
                          },
                          {
                            "url": "https://bugs.chromium.org/p/chromium/issues/detail?id=1286127",
                            "title": "1286127 -       chromium -      An open-source project to help move the web forward. -     Monorail"
                          }
                        ]
                      }
                    },
                    {
                      "count": 698,
                      "id": "popover_api",
                      "percentageQuestion": 36.78,
                      "percentageSurvey": 12.92,
                      "entity": {
                        "name": "Popover API",
                        "nameClean": "Popover API",
                        "description": "HTML syntax and JS API facilitating popovers such as overlays, popups, menus etc.",
                        "descriptionClean": "HTML syntax and JS API facilitating popovers such as overlays, popups, menus etc.",
                        "id": "popover_api",
                        "entityType": "feature",
                        "example": {
                          "language": "html",
                          "code": "<button popovertarget=\"foo\">Toggle the popover</button>\n<div id=\"foo\" popover>Popover content</div>",
                          "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">popovertarget</span>=<span class=\"hljs-string\">&quot;foo&quot;</span>&gt;</span>Toggle the popover<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;foo&quot;</span> <span class=\"hljs-attr\">popover</span>&gt;</span>Popover content<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/API/Popover_API"
                        },
                        "caniuse": {
                          "url": "https://caniuse.com/mdn-html_global_attributes_popover"
                        },
                        "resources": [
                          {
                            "url": "https://html.spec.whatwg.org/multipage/popover.html#dom-popover",
                            "title": "HTML Standard"
                          },
                          {
                            "url": "https://github.com/w3ctag/design-reviews/issues/743",
                            "title": "The Popover API (previously Popup) · Issue #743 · w3ctag/design-reviews · GitHub"
                          },
                          {
                            "url": "https://open-ui.org/components/popover.research.explainer/",
                            "title": "Popover API (Explainer) | Open UI"
                          }
                        ]
                      }
                    },
                    {
                      "count": 696,
                      "id": "edit_context",
                      "percentageQuestion": 36.67,
                      "percentageSurvey": 12.88,
                      "entity": {
                        "name": "`EditContext`\n",
                        "nameHtml": "<code>EditContext</code>\n",
                        "nameClean": "EditContext",
                        "description": "The EditContext interface represents the text edit context of an element that was made editable by using the EditContext API.\n",
                        "descriptionClean": "The EditContext interface represents the text edit context of an element that was made editable by using the EditContext API.\n",
                        "id": "edit_context",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "const canvas = document.createElement(\"canvas\");\nconst editContext = new EditContext();\ncanvas.editContext = editContext;\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">const</span> canvas = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">&quot;canvas&quot;</span>);\n<span class=\"hljs-keyword\">const</span> editContext = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">EditContext</span>();\ncanvas.<span class=\"hljs-property\">editContext</span> = editContext;"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/API/EditContext"
                        }
                      }
                    },
                    {
                      "count": 666,
                      "id": "custom_highlight_api",
                      "percentageQuestion": 35.09,
                      "percentageSurvey": 12.33,
                      "entity": {
                        "name": "CSS Custom Highlight API",
                        "nameClean": "CSS Custom Highlight API",
                        "description": "Provides a mechanism for styling arbitrary text ranges on a document by using JavaScript to create the ranges, and CSS to style them.\n",
                        "descriptionClean": "Provides a mechanism for styling arbitrary text ranges on a document by using JavaScript to create the ranges, and CSS to style them.\n",
                        "id": "custom_highlight_api",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "\n// css\n::highlight(my-custom-highlight) {\n  background-color: blue;\n}\n\n// js\nconst parentNode = document.getElementById(\"foo\");\nconst range1 = new Range();\nrange1.setStart(parentNode, 10);\nrange1.setEnd(parentNode, 20);\nconst highlight = new Highlight(range1);\nCSS.highlights.set(\"my-custom-highlight\", highlight);\n",
                          "codeHighlighted": "<span class=\"hljs-comment\">// css</span>\n::<span class=\"hljs-title function_\">highlight</span>(<span class=\"hljs-params\">my-custom-highlight</span>) {\n  background-<span class=\"hljs-attr\">color</span>: blue;\n}\n\n<span class=\"hljs-comment\">// js</span>\n<span class=\"hljs-keyword\">const</span> parentNode = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&quot;foo&quot;</span>);\n<span class=\"hljs-keyword\">const</span> range1 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Range</span>();\nrange1.<span class=\"hljs-title function_\">setStart</span>(parentNode, <span class=\"hljs-number\">10</span>);\nrange1.<span class=\"hljs-title function_\">setEnd</span>(parentNode, <span class=\"hljs-number\">20</span>);\n<span class=\"hljs-keyword\">const</span> highlight = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Highlight</span>(range1);\n<span class=\"hljs-variable constant_\">CSS</span>.<span class=\"hljs-property\">highlights</span>.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&quot;my-custom-highlight&quot;</span>, highlight);"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/API/CSS_Custom_Highlight_API"
                        }
                      }
                    },
                    {
                      "count": 620,
                      "id": "dom_parts",
                      "percentageQuestion": 32.67,
                      "percentageSurvey": 11.48,
                      "entity": {
                        "name": "DOM Parts",
                        "nameClean": "DOM Parts",
                        "description": "A cacheable representation of a part of the DOM that can be updated performantly.",
                        "descriptionClean": "A cacheable representation of a part of the DOM that can be updated performantly.",
                        "id": "dom_parts",
                        "entityType": "feature",
                        "resources": [
                          {
                            "url": "https://github.com/WICG/webcomponents/blob/gh-pages/proposals/DOM-Parts.md",
                            "title": "DOM Part API"
                          },
                          {
                            "url": "https://github.com/tbondwilkinson/dom-parts#readme",
                            "title": "GitHub - tbondwilkinson/dom-parts"
                          },
                          {
                            "url": "https://groups.google.com/a/chromium.org/g/blink-dev/c/wIADRnljZDA/m/Ghfv2jyRAgAJ"
                          }
                        ]
                      }
                    },
                    {
                      "count": 612,
                      "id": "accordion_element",
                      "percentageQuestion": 32.24,
                      "percentageSurvey": 11.33,
                      "entity": {
                        "name": "Exclusive Accordion",
                        "nameClean": "Exclusive Accordion",
                        "description": "Group `<details>` elements so that only up to one in the group can be open at a time.",
                        "descriptionHtml": "Group <code>&lt;details&gt;</code> elements so that only up to one in the group can be open at a time.",
                        "descriptionClean": "Group details elements so that only up to one in the group can be open at a time.",
                        "id": "accordion_element",
                        "entityType": "feature",
                        "example": {
                          "language": "html",
                          "code": "<details open name=\"sidebar_panel\" id=\"main_info\">\n\t<summary>Main info</summary>\n\t<!-- controls -->\n</details>\n<details name=\"sidebar_panel\" id=\"style_settings\">\n\t<summary>Style</summary>\n\t<!-- controls -->\n</details>",
                          "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">details</span> <span class=\"hljs-attr\">open</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;sidebar_panel&quot;</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;main_info&quot;</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">summary</span>&gt;</span>Main info<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">summary</span>&gt;</span>\n\t<span class=\"hljs-comment\">&lt;!-- controls --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">details</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">details</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;sidebar_panel&quot;</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;style_settings&quot;</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">summary</span>&gt;</span>Style<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">summary</span>&gt;</span>\n\t<span class=\"hljs-comment\">&lt;!-- controls --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">details</span>&gt;</span>"
                        },
                        "resources": [
                          {
                            "url": "https://github.com/whatwg/html/pull/9400",
                            "title": "Add name attribute for grouping details elements into an exclusive accordion by dbaron · Pull Request #9400 · whatwg/html · GitHub"
                          },
                          {
                            "url": "https://github.com/w3ctag/design-reviews/issues/866#issuecomment-1661272254",
                            "title": "Exclusive accordion (&lt;details name=&quot;&quot;&gt;) · Issue #866 · w3ctag/design-reviews · GitHub"
                          },
                          {
                            "url": "https://open-ui.org/components/accordion.explainer/",
                            "title": "Exclusive Accordion (Explainer) | Open UI"
                          },
                          {
                            "url": "https://chromestatus.com/feature/6710427028815872",
                            "title": "Chrome Platform Status"
                          }
                        ],
                        "webFeature": {
                          "id": "details-name",
                          "description_html": "Multiple <code>&#x3C;details></code> elements which use the same <code>name</code> attribute are mutually exclusive. When one member of the group is opened, all other members are closed.",
                          "group": "html-elements",
                          "name": "Mutually exclusive <details> elements",
                          "spec": [
                            "https://html.spec.whatwg.org/multipage/interactive-elements.html#attr-details-name"
                          ],
                          "status": {
                            "baseline": "low",
                            "baseline_low_date": "2024-09-03",
                            "support": {
                              "chrome": "120",
                              "chrome_android": "120",
                              "edge": "120",
                              "firefox": "130",
                              "firefox_android": "130",
                              "safari": "17.2",
                              "safari_ios": "17.2"
                            }
                          }
                        }
                      }
                    },
                    {
                      "count": 612,
                      "id": "badging_api",
                      "percentageQuestion": 32.24,
                      "percentageSurvey": 11.33,
                      "entity": {
                        "name": "Badging API",
                        "nameClean": "Badging API",
                        "description": "Set a badge on the web application’s icon to notify about updated state in a less intrusive, persistent way.",
                        "descriptionClean": "Set a badge on the web application’s icon to notify about updated state in a less intrusive, persistent way.",
                        "id": "badging_api",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "navigator.setAppBadge(unreadCount)",
                          "codeHighlighted": "navigator.<span class=\"hljs-title function_\">setAppBadge</span>(unreadCount)"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/API/Badging_API"
                        },
                        "resources": [
                          {
                            "url": "https://developer.chrome.com/articles/badging-api/",
                            "title": "Badging for app icons - Chrome Developers"
                          }
                        ]
                      }
                    },
                    {
                      "count": 608,
                      "id": "inert_attribute",
                      "percentageQuestion": 32.03,
                      "percentageSurvey": 11.26,
                      "entity": {
                        "name": "`inert` attribute",
                        "nameHtml": "<code>inert</code> attribute",
                        "nameClean": "inert attribute",
                        "description": "Attribute to make an element and its descendants non-interactive, and invisible to assistive technology.",
                        "descriptionClean": "Attribute to make an element and its descendants non-interactive, and invisible to assistive technology.",
                        "id": "inert_attribute",
                        "entityType": "feature",
                        "example": {
                          "language": "html",
                          "code": "<div id=app inert class=loading>\n  ...\n</div>",
                          "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">app</span> <span class=\"hljs-attr\">inert</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">loading</span>&gt;</span>\n  ...\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inert"
                        },
                        "resources": [
                          {
                            "url": "https://html.spec.whatwg.org/multipage/interaction.html#the-inert-attribute",
                            "title": "HTML Standard"
                          },
                          {
                            "url": "https://developer.chrome.com/articles/inert/",
                            "title": "Introducing inert - Chrome Developers"
                          },
                          {
                            "url": "https://www.stefanjudis.com/blog/the-inert-attribute-is-finally-coming-to-the-web/",
                            "title": "The \"inert\" attribute is finally coming to the web | Stefan Judis Web Development"
                          }
                        ]
                      }
                    },
                    {
                      "count": 606,
                      "id": "set_html_unsafe",
                      "percentageQuestion": 31.93,
                      "percentageSurvey": 11.22,
                      "entity": {
                        "name": "`setHtmlUnsafe()`",
                        "nameHtml": "<code>setHtmlUnsafe()</code>",
                        "nameClean": "setHtmlUnsafe()",
                        "description": "Used to parse a string of HTML into a DocumentFragment, which then replaces the element's subtree in the DOM.\n",
                        "descriptionHtml": "Used to parse a string of HTML into a DocumentFragment, which then replaces the element's subtree in the DOM.\n",
                        "descriptionClean": "Used to parse a string of HTML into a DocumentFragment, which then replaces the element's subtree in the DOM.",
                        "id": "set_html_unsafe",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "const value = \"<p>This is a string of text</p>\";\ndocument.getElementById(\"target\").setHTMLUnsafe(value);\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">const</span> value = <span class=\"hljs-string\">&quot;&lt;p&gt;This is a string of text&lt;/p&gt;&quot;</span>;\n<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&quot;target&quot;</span>).<span class=\"hljs-title function_\">setHTMLUnsafe</span>(value);"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/setHTMLUnsafe"
                        }
                      }
                    },
                    {
                      "count": 583,
                      "id": "caret_position_from_point",
                      "percentageQuestion": 30.72,
                      "percentageSurvey": 10.79,
                      "entity": {
                        "name": "`caretPositionFromPoint`\n",
                        "nameHtml": "<code>caretPositionFromPoint</code>\n",
                        "nameClean": "caretPositionFromPoint",
                        "description": "The caretPositionFromPoint() method returns the caret's character offset.\n",
                        "descriptionHtml": "The caretPositionFromPoint() method returns the caret's character offset.\n",
                        "descriptionClean": "The caretPositionFromPoint() method returns the caret's character offset.",
                        "id": "caret_position_from_point",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "const range = document.caretPositionFromPoint(e.clientX, e.clientY);\nconst textNode = range.offsetNode;\nconst offset = range.offset;",
                          "codeHighlighted": "<span class=\"hljs-keyword\">const</span> range = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">caretPositionFromPoint</span>(e.<span class=\"hljs-property\">clientX</span>, e.<span class=\"hljs-property\">clientY</span>);\n<span class=\"hljs-keyword\">const</span> textNode = range.<span class=\"hljs-property\">offsetNode</span>;\n<span class=\"hljs-keyword\">const</span> offset = range.<span class=\"hljs-property\">offset</span>;"
                        }
                      }
                    },
                    {
                      "count": 579,
                      "id": "intl_segmenter",
                      "percentageQuestion": 30.51,
                      "percentageSurvey": 10.72,
                      "entity": {
                        "name": "`Intl.Segmenter` API\n",
                        "nameHtml": "<code>Intl.Segmenter</code> API\n",
                        "nameClean": "Intl.Segmenter API",
                        "description": "Language-sensitive segmentation of text into graphemes, words or sentences.\n",
                        "descriptionClean": "Language-sensitive segmentation of text into graphemes, words or sentences.\n",
                        "id": "intl_segmenter",
                        "entityType": "feature",
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter"
                        }
                      }
                    },
                    {
                      "count": 577,
                      "id": "html_modules",
                      "percentageQuestion": 30.4,
                      "percentageSurvey": 10.68,
                      "entity": {
                        "name": "HTML Modules",
                        "nameClean": "HTML Modules",
                        "description": "Import HTML files via JS imports and access their elements and JS exports.",
                        "descriptionClean": "Import HTML files via JS imports and access their elements and JS exports.",
                        "id": "html_modules",
                        "entityType": "feature",
                        "example": {
                          "language": "html",
                          "code": "<script type=\"module\">\n\timport { TabList } from \"./tablist.html\" with { type: 'html' };\n\tcustomElements.define(\"tab-list\", TabList);\n</script>",
                          "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;module&quot;</span>&gt;</span><span class=\"language-javascript\">\n\t<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">TabList</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./tablist.html&quot;</span> <span class=\"hljs-keyword\">with</span> { <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;html&#x27;</span> };\n\tcustomElements.<span class=\"hljs-title function_\">define</span>(<span class=\"hljs-string\">&quot;tab-list&quot;</span>, <span class=\"hljs-title class_\">TabList</span>);\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>"
                        },
                        "resources": [
                          {
                            "url": "https://github.com/WICG/webcomponents/blob/gh-pages/proposals/html-modules-explainer.md",
                            "title": "HTML Modules Explainer"
                          },
                          {
                            "url": "https://chromestatus.com/feature/4854408103854080",
                            "title": "Chrome Platform Status"
                          },
                          {
                            "url": "https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/HTMLModules/designDoc.md"
                          }
                        ]
                      }
                    },
                    {
                      "count": 576,
                      "id": "search_element",
                      "percentageQuestion": 30.35,
                      "percentageSurvey": 10.66,
                      "entity": {
                        "name": "`<search>`",
                        "nameHtml": "<code>&lt;search&gt;</code>",
                        "nameClean": "search",
                        "description": "Semantic element for wrapping search UI.",
                        "descriptionClean": "Semantic element for wrapping search UI.",
                        "id": "search_element",
                        "entityType": "feature",
                        "example": {
                          "language": "html",
                          "code": "<search>\n  <form action=\"search.php\">\n    <label>Find: <input name=\"q\" type=\"search\"></label>\n    <button>Go!</button>\n  </form>\n</search>",
                          "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">search</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">&quot;search.php&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Find: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;q&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;search&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span>&gt;</span>Go!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">search</span>&gt;</span>"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/search"
                        },
                        "caniuse": {
                          "url": "https://caniuse.com/mdn-html_elements_search"
                        },
                        "resources": [
                          {
                            "url": "https://html.spec.whatwg.org/multipage/grouping-content.html#the-search-element",
                            "title": "HTML Standard"
                          },
                          {
                            "url": "https://www.scottohara.me/blog/2023/03/24/search-element.html",
                            "title": "The search element | scottohara.me"
                          },
                          {
                            "url": "https://github.com/w3ctag/design-reviews/issues/714",
                            "title": "&lt;search&gt; HTML element · Issue #714 · w3ctag/design-reviews · GitHub"
                          }
                        ]
                      }
                    },
                    {
                      "count": 570,
                      "id": "contenteditable_plaintext",
                      "percentageQuestion": 30.03,
                      "percentageSurvey": 10.55,
                      "entity": {
                        "name": "`contenteditable=\"plaintext-only\"`",
                        "nameHtml": "<code>contenteditable=\"plaintext-only\"</code>",
                        "nameClean": "contenteditable=\"plaintext-only\"",
                        "description": "Permits editing of the element's raw text, but not rich text formatting.",
                        "descriptionHtml": "Permits editing of the element's raw text, but not rich text formatting.",
                        "descriptionClean": "Permits editing of the element's raw text, but not rich text formatting.",
                        "id": "contenteditable_plaintext",
                        "entityType": "feature",
                        "example": {
                          "language": "html",
                          "code": "<h2 class=\"title\" contenteditable=\"plaintext-only\"></h2>",
                          "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;title&quot;</span> <span class=\"hljs-attr\">contenteditable</span>=<span class=\"hljs-string\">&quot;plaintext-only&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contenteditable"
                        },
                        "resources": [
                          {
                            "url": "https://html.spec.whatwg.org/multipage/interaction.html#attr-contenteditable",
                            "title": "HTML Standard"
                          }
                        ]
                      }
                    },
                    {
                      "count": 560,
                      "id": "blocking_render",
                      "percentageQuestion": 29.5,
                      "percentageSurvey": 10.37,
                      "entity": {
                        "name": "`blocking=\"render\"`",
                        "nameHtml": "<code>blocking=\"render\"</code>",
                        "nameClean": "blocking=\"render\"",
                        "description": "Specify that resources (scripts, stylesheets etc) should block rendering until loaded.",
                        "descriptionClean": "Specify that resources (scripts, stylesheets etc) should block rendering until loaded.",
                        "id": "blocking_render",
                        "entityType": "feature",
                        "example": {
                          "language": "html",
                          "code": "<script blocking=\"render\" async src=\"async-script.js\"></script>",
                          "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">blocking</span>=<span class=\"hljs-string\">&quot;render&quot;</span> <span class=\"hljs-attr\">async</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;async-script.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script"
                        },
                        "caniuse": {
                          "url": "https://caniuse.com/mdn-html_elements_link_blocking"
                        },
                        "resources": [
                          {
                            "url": "https://html.spec.whatwg.org/multipage/urls-and-fetching.html#blocking-attributes",
                            "title": "HTML Standard"
                          },
                          {
                            "url": "https://gist.github.com/xiaochengh/9404abbecdc3b45c0e9f3d5e99fbc65d",
                            "title": "proposal-v3.md · GitHub"
                          },
                          {
                            "url": "https://github.com/w3ctag/design-reviews/issues/727",
                            "title": "Review request on `blocking=render` attribute for scripts and stylesheets · Issue #727 · w3ctag/design-reviews · GitHub"
                          }
                        ]
                      }
                    },
                    {
                      "count": 538,
                      "id": "showpicker",
                      "percentageQuestion": 28.35,
                      "percentageSurvey": 9.96,
                      "entity": {
                        "name": "`input.showPicker()`",
                        "nameHtml": "<code>input.showPicker()</code>",
                        "nameClean": "input.showPicker()",
                        "description": "Programmatically open the picker of form controls that have one (color pickers, date inputs etc).",
                        "descriptionClean": "Programmatically open the picker of form controls that have one (color pickers, date inputs etc).",
                        "id": "showpicker",
                        "entityType": "feature",
                        "example": {
                          "language": "html",
                          "code": "<input id=\"dateInput\" type=\"date\">\n<button onclick=\"dateInput.showPicker()\">Select date</button>",
                          "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;dateInput&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;date&quot;</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onclick</span>=<span class=\"hljs-string\">&quot;dateInput.showPicker()&quot;</span>&gt;</span>Select date<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/showPicker"
                        },
                        "resources": [
                          {
                            "url": "https://html.spec.whatwg.org/multipage/input.html#dom-input-showpicker",
                            "title": "HTML Standard"
                          },
                          {
                            "url": "https://github.com/w3ctag/design-reviews/issues/688",
                            "title": "HTMLInputElement showPicker() · Issue #688 · w3ctag/design-reviews · GitHub"
                          }
                        ]
                      }
                    },
                    {
                      "count": 534,
                      "id": "datalist_element",
                      "percentageQuestion": 28.13,
                      "percentageSurvey": 9.89,
                      "entity": {
                        "name": "`<datalist>`",
                        "nameHtml": "<code>&lt;datalist&gt;</code>",
                        "nameClean": "datalist",
                        "description": "Method of providing a list of presets for a user to select in a form control, while still allowing custom options.",
                        "descriptionClean": "Method of providing a list of presets for a user to select in a form control, while still allowing custom options.",
                        "id": "datalist_element",
                        "entityType": "feature",
                        "example": {
                          "language": "html",
                          "code": "<input name=\"country\" list=\"countries\">\n<datalist id=\"countries\">\n  <option>Afghanistan</option>\n  ...\n</datalist>",
                          "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;country&quot;</span> <span class=\"hljs-attr\">list</span>=<span class=\"hljs-string\">&quot;countries&quot;</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">datalist</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;countries&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span>&gt;</span>Afghanistan<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n  ...\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">datalist</span>&gt;</span>"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist"
                        },
                        "caniuse": {
                          "url": "https://caniuse.com/datalist"
                        },
                        "resources": [
                          {
                            "url": "https://html.spec.whatwg.org/multipage/form-elements.html#the-datalist-element",
                            "title": "The datalist element"
                          }
                        ]
                      }
                    },
                    {
                      "count": 518,
                      "id": "parse_html_unsafe",
                      "percentageQuestion": 27.29,
                      "percentageSurvey": 9.59,
                      "entity": {
                        "name": "`parseHtmlUnsafe()`",
                        "nameHtml": "<code>parseHtmlUnsafe()</code>",
                        "nameClean": "parseHtmlUnsafe()",
                        "description": "Used to parse a string of HTML, which may contain declarative shadow roots, in order to create a new Document instance.\n",
                        "descriptionClean": "Used to parse a string of HTML, which may contain declarative shadow roots, in order to create a new Document instance.\n",
                        "id": "parse_html_unsafe",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "Document.parseHTMLUnsafe(input)\n",
                          "codeHighlighted": "<span class=\"hljs-title class_\">Document</span>.<span class=\"hljs-title function_\">parseHTMLUnsafe</span>(input)"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/API/Document/parseHTMLUnsafe_static"
                        }
                      }
                    },
                    {
                      "count": 497,
                      "id": "fetchpriority_attribute",
                      "percentageQuestion": 26.19,
                      "percentageSurvey": 9.2,
                      "entity": {
                        "name": "`fetchpriority` attribute\n",
                        "nameHtml": "<code>fetchpriority</code> attribute\n",
                        "nameClean": "fetchpriority attribute",
                        "description": "Allows specifying a hint to help the browser prioritize fetching various resources.",
                        "descriptionClean": "Allows specifying a hint to help the browser prioritize fetching various resources.",
                        "id": "fetchpriority_attribute",
                        "entityType": "feature",
                        "example": {
                          "language": "html",
                          "code": "<img src=\"logo.svg\" fetchpriority=\"high\" />",
                          "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;logo.svg&quot;</span> <span class=\"hljs-attr\">fetchpriority</span>=<span class=\"hljs-string\">&quot;high&quot;</span> /&gt;</span>"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/fetchPriority"
                        },
                        "caniuse": {
                          "url": "https://caniuse.com/mdn-html_elements_script_fetchpriority"
                        },
                        "resources": [
                          {
                            "url": "https://wicg.github.io/priority-hints/",
                            "title": "Priority Hints (obsolete)"
                          },
                          {
                            "url": "https://github.com/w3ctag/design-reviews/issues/704",
                            "title": "Priority Hints API · Issue #704 · w3ctag/design-reviews · GitHub"
                          },
                          {
                            "url": "https://github.com/WICG/priority-hints/blob/main/EXPLAINER.md",
                            "title": "Priority Hints"
                          },
                          {
                            "url": "https://chromestatus.com/feature/5273474901737472",
                            "title": "Chrome Platform Status"
                          },
                          {
                            "url": "https://web.dev/fetch-priority/",
                            "title": "Optimizing resource loading with the Fetch Priority API"
                          }
                        ]
                      }
                    },
                    {
                      "count": 3252,
                      "id": "no_answer",
                      "percentageQuestion": 0,
                      "percentageSurvey": 60.2
                    },
                    {
                      "count": 13914,
                      "id": "overlimit_answers",
                      "percentageQuestion": 733.11,
                      "percentageSurvey": 257.54
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}